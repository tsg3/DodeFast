
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEASSIGN DCL DIVIDE EQUALS IDEN INT LESS LESS_EQUAL MINUS MORE MORE_EQUAL MULTIPLY NON_EQUAL PLUS\n    parse : comparative\n          | expression\n          | var_declare\n          | var_assign\n          | empty\n    \n    var_declare : DCL IDEN value\n    \n    value : initialize\n          | empty\n    \n    initialize : ASSIGN expression\n    \n    comparative : expression EQUALS EQUALS expression\n                | IDEN EQUALS EQUALS expression\n    \n    var_assign : IDEN EQUALS expression\n    \n    expression : expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression condition expression\n    \n    expression : IDEN\n    \n    expression : INT\n    \n    condition : LESS\n              | MORE\n              | NON_EQUAL\n              | LESS_EQUAL\n              | MORE_EQUAL\n    \n    empty :\n    '
    
_lr_action_items = {'IDEN':([0,9,11,12,13,14,15,16,17,18,19,20,21,23,30,35,],[7,22,25,25,25,25,25,-20,-21,-22,-23,-24,25,25,25,25,]),'INT':([0,11,12,13,14,15,16,17,18,19,20,21,23,30,35,],[8,8,8,8,8,8,-20,-21,-22,-23,-24,8,8,8,8,]),'DCL':([0,],[9,]),'$end':([0,1,2,3,4,5,6,7,8,22,24,25,26,27,28,29,31,32,33,34,36,37,38,],[-25,0,-1,-2,-3,-4,-5,-18,-19,-25,-13,-18,-14,-15,-16,-17,-12,-6,-7,-8,-10,-11,-9,]),'EQUALS':([3,7,8,10,21,24,25,26,27,28,29,],[10,21,-19,23,30,-13,-18,-14,-15,-16,-17,]),'MULTIPLY':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[11,-18,-19,-13,-18,-14,11,11,11,11,11,11,11,]),'DIVIDE':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[12,-18,-19,-13,-18,-14,12,12,12,12,12,12,12,]),'PLUS':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[13,-18,-19,-13,-18,-14,-15,-16,13,13,13,13,13,]),'MINUS':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[14,-18,-19,-13,-18,-14,-15,-16,14,14,14,14,14,]),'LESS':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[16,-18,-19,-13,-18,-14,-15,-16,16,16,16,16,16,]),'MORE':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[17,-18,-19,-13,-18,-14,-15,-16,17,17,17,17,17,]),'NON_EQUAL':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[18,-18,-19,-13,-18,-14,-15,-16,18,18,18,18,18,]),'LESS_EQUAL':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[19,-18,-19,-13,-18,-14,-15,-16,19,19,19,19,19,]),'MORE_EQUAL':([3,7,8,24,25,26,27,28,29,31,36,37,38,],[20,-18,-19,-13,-18,-14,-15,-16,20,20,20,20,20,]),'ASSIGN':([22,],[35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parse':([0,],[1,]),'comparative':([0,],[2,]),'expression':([0,11,12,13,14,15,21,23,30,35,],[3,24,26,27,28,29,31,36,37,38,]),'var_declare':([0,],[4,]),'var_assign':([0,],[5,]),'empty':([0,22,],[6,34,]),'condition':([3,24,26,27,28,29,31,36,37,38,],[15,15,15,15,15,15,15,15,15,15,]),'value':([22,],[32,]),'initialize':([22,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse","S'",1,None,None,None),
  ('parse -> comparative','parse',1,'p_parse','test.py',80),
  ('parse -> expression','parse',1,'p_parse','test.py',81),
  ('parse -> var_declare','parse',1,'p_parse','test.py',82),
  ('parse -> var_assign','parse',1,'p_parse','test.py',83),
  ('parse -> empty','parse',1,'p_parse','test.py',84),
  ('var_declare -> DCL IDEN value','var_declare',3,'p_var_declare','test.py',91),
  ('value -> initialize','value',1,'p_value','test.py',97),
  ('value -> empty','value',1,'p_value','test.py',98),
  ('initialize -> ASSIGN expression','initialize',2,'p_initialize','test.py',104),
  ('comparative -> expression EQUALS EQUALS expression','comparative',4,'p_comparative','test.py',110),
  ('comparative -> IDEN EQUALS EQUALS expression','comparative',4,'p_comparative','test.py',111),
  ('var_assign -> IDEN EQUALS expression','var_assign',3,'p_var_assign','test.py',120),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','test.py',126),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','test.py',127),
  ('expression -> expression PLUS expression','expression',3,'p_expression','test.py',128),
  ('expression -> expression MINUS expression','expression',3,'p_expression','test.py',129),
  ('expression -> expression condition expression','expression',3,'p_expression','test.py',130),
  ('expression -> IDEN','expression',1,'p_expression_var','test.py',136),
  ('expression -> INT','expression',1,'p_expression_int','test.py',142),
  ('condition -> LESS','condition',1,'p_condition','test.py',148),
  ('condition -> MORE','condition',1,'p_condition','test.py',149),
  ('condition -> NON_EQUAL','condition',1,'p_condition','test.py',150),
  ('condition -> LESS_EQUAL','condition',1,'p_condition','test.py',151),
  ('condition -> MORE_EQUAL','condition',1,'p_condition','test.py',152),
  ('empty -> <empty>','empty',0,'p_empty','test.py',162),
]
