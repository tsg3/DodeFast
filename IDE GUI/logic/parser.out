Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> parse
Rule 1     parse -> comparative
Rule 2     parse -> sentence
Rule 3     parse -> var_declare
Rule 4     parse -> proc
Rule 5     parse -> IDEN
Rule 6     parse -> empty
Rule 7     proc -> LLAMAR IDEN LPAR params RPAR
Rule 8     params -> expression more_params
Rule 9     more_params -> COMMA params
Rule 10    more_params -> empty
Rule 11    sentence -> var_assign
Rule 12    sentence -> cases
Rule 13    sentence -> repeat
Rule 14    sentence -> do
Rule 15    sentence -> function
Rule 16    sentence -> proc
Rule 17    function -> moves
Rule 18    function -> random
Rule 19    function -> changes
Rule 20    moves -> MOVER LPAR IDEN RPAR
Rule 21    random -> ALEATORIO LPAR RPAR
Rule 22    changes -> changes_aux LPAR IDEN COMMA INT RPAR
Rule 23    changes_aux -> INC
Rule 24    changes_aux -> DEC
Rule 25    changes_aux -> INI
Rule 26    do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
Rule 27    repeat -> REPITA actions MIENTRAS comparative
Rule 28    cases -> syntax1
Rule 29    cases -> syntax2
Rule 30    syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
Rule 31    options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
Rule 32    more_options2 -> options2
Rule 33    more_options2 -> empty
Rule 34    syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO
Rule 35    options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
Rule 36    more_options1 -> options1
Rule 37    more_options1 -> empty
Rule 38    actions -> sentence more_actions
Rule 39    more_actions -> SEPARATOR more_actions_aux
Rule 40    more_actions -> empty
Rule 41    more_actions_aux -> actions
Rule 42    more_actions_aux -> empty
Rule 43    var_declare -> DCL IDEN value
Rule 44    value -> initialize
Rule 45    value -> empty
Rule 46    initialize -> ASSIGN expression
Rule 47    comparative -> IDEN condition expression
Rule 48    var_assign -> IDEN EQUALS expression
Rule 49    expression -> expression operator expression
Rule 50    expression -> IDEN
Rule 51    expression -> INT
Rule 52    operator -> MULTIPLY
Rule 53    operator -> DIVIDE
Rule 54    operator -> PLUS
Rule 55    operator -> MINUS
Rule 56    condition -> SAME
Rule 57    condition -> LESS
Rule 58    condition -> MORE
Rule 59    condition -> NON_EQUAL
Rule 60    condition -> LESS_EQUAL
Rule 61    condition -> MORE_EQUAL
Rule 62    empty -> <empty>

Terminals, with rules where they appear

ALEATORIO            : 21
ASSIGN               : 46
COMMA                : 9 22
CUANDO               : 31 35
DCL                  : 43
DEC                  : 24
DESDE                : 26
DIVIDE               : 53
ENCASO               : 30 34
ENTONS               : 31 35
EQUALS               : 26 48
FINCASO              : 30 34
FINDESDE             : 26
HAGA                 : 26
HASTA                : 26
IDEN                 : 5 7 20 22 26 30 43 47 48 50
INC                  : 23
INI                  : 25
INT                  : 22 51
LBRACE               : 30 31 34 35
LESS                 : 57
LESS_EQUAL           : 60
LLAMAR               : 7
LPAR                 : 7 20 21 22
MIENTRAS             : 27
MINUS                : 55
MORE                 : 58
MORE_EQUAL           : 61
MOVER                : 20
MULTIPLY             : 52
NON_EQUAL            : 59
PLUS                 : 54
RBRACE               : 30 31 34 35
REPITA               : 27
RPAR                 : 7 20 21 22
SAME                 : 56
SEPARATOR            : 39
SINO                 : 30 34
error                : 

Nonterminals, with rules where they appear

actions              : 26 27 30 31 34 35 41
cases                : 12
changes              : 19
changes_aux          : 22
comparative          : 1 27 35
condition            : 31 47
do                   : 14
empty                : 6 10 33 37 40 42 45
expression           : 8 26 26 31 46 47 48 49 49
function             : 15
initialize           : 44
more_actions         : 38
more_actions_aux     : 39
more_options1        : 35
more_options2        : 31
more_params          : 8
moves                : 17
operator             : 49
options1             : 34 36
options2             : 30 32
params               : 7 9
parse                : 0
proc                 : 4 16
random               : 18
repeat               : 13
sentence             : 2 38
syntax1              : 28
syntax2              : 29
value                : 43
var_assign           : 11
var_declare          : 3

Parsing method: LALR

state 0

    (0) S' -> . parse
    (1) parse -> . comparative
    (2) parse -> . sentence
    (3) parse -> . var_declare
    (4) parse -> . proc
    (5) parse -> . IDEN
    (6) parse -> . empty
    (47) comparative -> . IDEN condition expression
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (43) var_declare -> . DCL IDEN value
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (62) empty -> .
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 6
    DCL             shift and go to state 13
    LLAMAR          shift and go to state 14
    $end            reduce using rule 62 (empty -> .)
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    parse                          shift and go to state 1
    comparative                    shift and go to state 2
    sentence                       shift and go to state 3
    var_declare                    shift and go to state 4
    proc                           shift and go to state 5
    empty                          shift and go to state 7
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 1

    (0) S' -> parse .



state 2

    (1) parse -> comparative .

    $end            reduce using rule 1 (parse -> comparative .)


state 3

    (2) parse -> sentence .

    $end            reduce using rule 2 (parse -> sentence .)


state 4

    (3) parse -> var_declare .

    $end            reduce using rule 3 (parse -> var_declare .)


state 5

    (4) parse -> proc .
    (16) sentence -> proc .

  ! reduce/reduce conflict for $end resolved using rule 4 (parse -> proc .)
    $end            reduce using rule 4 (parse -> proc .)

  ! $end            [ reduce using rule 16 (sentence -> proc .) ]


state 6

    (5) parse -> IDEN .
    (47) comparative -> IDEN . condition expression
    (48) var_assign -> IDEN . EQUALS expression
    (56) condition -> . SAME
    (57) condition -> . LESS
    (58) condition -> . MORE
    (59) condition -> . NON_EQUAL
    (60) condition -> . LESS_EQUAL
    (61) condition -> . MORE_EQUAL

    $end            reduce using rule 5 (parse -> IDEN .)
    EQUALS          shift and go to state 30
    SAME            shift and go to state 31
    LESS            shift and go to state 32
    MORE            shift and go to state 33
    NON_EQUAL       shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    MORE_EQUAL      shift and go to state 36

    condition                      shift and go to state 29

state 7

    (6) parse -> empty .

    $end            reduce using rule 6 (parse -> empty .)


state 8

    (11) sentence -> var_assign .

    $end            reduce using rule 11 (sentence -> var_assign .)
    SEPARATOR       reduce using rule 11 (sentence -> var_assign .)
    MIENTRAS        reduce using rule 11 (sentence -> var_assign .)
    RBRACE          reduce using rule 11 (sentence -> var_assign .)
    FINDESDE        reduce using rule 11 (sentence -> var_assign .)


state 9

    (12) sentence -> cases .

    $end            reduce using rule 12 (sentence -> cases .)
    SEPARATOR       reduce using rule 12 (sentence -> cases .)
    MIENTRAS        reduce using rule 12 (sentence -> cases .)
    RBRACE          reduce using rule 12 (sentence -> cases .)
    FINDESDE        reduce using rule 12 (sentence -> cases .)


state 10

    (13) sentence -> repeat .

    $end            reduce using rule 13 (sentence -> repeat .)
    SEPARATOR       reduce using rule 13 (sentence -> repeat .)
    MIENTRAS        reduce using rule 13 (sentence -> repeat .)
    RBRACE          reduce using rule 13 (sentence -> repeat .)
    FINDESDE        reduce using rule 13 (sentence -> repeat .)


state 11

    (14) sentence -> do .

    $end            reduce using rule 14 (sentence -> do .)
    SEPARATOR       reduce using rule 14 (sentence -> do .)
    MIENTRAS        reduce using rule 14 (sentence -> do .)
    RBRACE          reduce using rule 14 (sentence -> do .)
    FINDESDE        reduce using rule 14 (sentence -> do .)


state 12

    (15) sentence -> function .

    $end            reduce using rule 15 (sentence -> function .)
    SEPARATOR       reduce using rule 15 (sentence -> function .)
    MIENTRAS        reduce using rule 15 (sentence -> function .)
    RBRACE          reduce using rule 15 (sentence -> function .)
    FINDESDE        reduce using rule 15 (sentence -> function .)


state 13

    (43) var_declare -> DCL . IDEN value

    IDEN            shift and go to state 37


state 14

    (7) proc -> LLAMAR . IDEN LPAR params RPAR

    IDEN            shift and go to state 38


state 15

    (28) cases -> syntax1 .

    $end            reduce using rule 28 (cases -> syntax1 .)
    SEPARATOR       reduce using rule 28 (cases -> syntax1 .)
    MIENTRAS        reduce using rule 28 (cases -> syntax1 .)
    RBRACE          reduce using rule 28 (cases -> syntax1 .)
    FINDESDE        reduce using rule 28 (cases -> syntax1 .)


state 16

    (29) cases -> syntax2 .

    $end            reduce using rule 29 (cases -> syntax2 .)
    SEPARATOR       reduce using rule 29 (cases -> syntax2 .)
    MIENTRAS        reduce using rule 29 (cases -> syntax2 .)
    RBRACE          reduce using rule 29 (cases -> syntax2 .)
    FINDESDE        reduce using rule 29 (cases -> syntax2 .)


state 17

    (27) repeat -> REPITA . actions MIENTRAS comparative
    (38) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 39
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 18

    (26) do -> DESDE . IDEN EQUALS expression HASTA expression HAGA actions FINDESDE

    IDEN            shift and go to state 43


state 19

    (17) function -> moves .

    $end            reduce using rule 17 (function -> moves .)
    SEPARATOR       reduce using rule 17 (function -> moves .)
    MIENTRAS        reduce using rule 17 (function -> moves .)
    RBRACE          reduce using rule 17 (function -> moves .)
    FINDESDE        reduce using rule 17 (function -> moves .)


state 20

    (18) function -> random .

    $end            reduce using rule 18 (function -> random .)
    SEPARATOR       reduce using rule 18 (function -> random .)
    MIENTRAS        reduce using rule 18 (function -> random .)
    RBRACE          reduce using rule 18 (function -> random .)
    FINDESDE        reduce using rule 18 (function -> random .)


state 21

    (19) function -> changes .

    $end            reduce using rule 19 (function -> changes .)
    SEPARATOR       reduce using rule 19 (function -> changes .)
    MIENTRAS        reduce using rule 19 (function -> changes .)
    RBRACE          reduce using rule 19 (function -> changes .)
    FINDESDE        reduce using rule 19 (function -> changes .)


state 22

    (34) syntax1 -> ENCASO . options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> ENCASO . IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (35) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1

    IDEN            shift and go to state 45
    CUANDO          shift and go to state 46

    options1                       shift and go to state 44

state 23

    (20) moves -> MOVER . LPAR IDEN RPAR

    LPAR            shift and go to state 47


state 24

    (21) random -> ALEATORIO . LPAR RPAR

    LPAR            shift and go to state 48


state 25

    (22) changes -> changes_aux . LPAR IDEN COMMA INT RPAR

    LPAR            shift and go to state 49


state 26

    (23) changes_aux -> INC .

    LPAR            reduce using rule 23 (changes_aux -> INC .)


state 27

    (24) changes_aux -> DEC .

    LPAR            reduce using rule 24 (changes_aux -> DEC .)


state 28

    (25) changes_aux -> INI .

    LPAR            reduce using rule 25 (changes_aux -> INI .)


state 29

    (47) comparative -> IDEN condition . expression
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 51

state 30

    (48) var_assign -> IDEN EQUALS . expression
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 53

state 31

    (56) condition -> SAME .

    IDEN            reduce using rule 56 (condition -> SAME .)
    INT             reduce using rule 56 (condition -> SAME .)


state 32

    (57) condition -> LESS .

    IDEN            reduce using rule 57 (condition -> LESS .)
    INT             reduce using rule 57 (condition -> LESS .)


state 33

    (58) condition -> MORE .

    IDEN            reduce using rule 58 (condition -> MORE .)
    INT             reduce using rule 58 (condition -> MORE .)


state 34

    (59) condition -> NON_EQUAL .

    IDEN            reduce using rule 59 (condition -> NON_EQUAL .)
    INT             reduce using rule 59 (condition -> NON_EQUAL .)


state 35

    (60) condition -> LESS_EQUAL .

    IDEN            reduce using rule 60 (condition -> LESS_EQUAL .)
    INT             reduce using rule 60 (condition -> LESS_EQUAL .)


state 36

    (61) condition -> MORE_EQUAL .

    IDEN            reduce using rule 61 (condition -> MORE_EQUAL .)
    INT             reduce using rule 61 (condition -> MORE_EQUAL .)


state 37

    (43) var_declare -> DCL IDEN . value
    (44) value -> . initialize
    (45) value -> . empty
    (46) initialize -> . ASSIGN expression
    (62) empty -> .

    ASSIGN          shift and go to state 57
    $end            reduce using rule 62 (empty -> .)

    value                          shift and go to state 54
    initialize                     shift and go to state 55
    empty                          shift and go to state 56

state 38

    (7) proc -> LLAMAR IDEN . LPAR params RPAR

    LPAR            shift and go to state 58


state 39

    (27) repeat -> REPITA actions . MIENTRAS comparative

    MIENTRAS        shift and go to state 59


state 40

    (38) actions -> sentence . more_actions
    (39) more_actions -> . SEPARATOR more_actions_aux
    (40) more_actions -> . empty
    (62) empty -> .

    SEPARATOR       shift and go to state 61
    MIENTRAS        reduce using rule 62 (empty -> .)
    RBRACE          reduce using rule 62 (empty -> .)
    FINDESDE        reduce using rule 62 (empty -> .)

    more_actions                   shift and go to state 60
    empty                          shift and go to state 62

state 41

    (16) sentence -> proc .

    SEPARATOR       reduce using rule 16 (sentence -> proc .)
    MIENTRAS        reduce using rule 16 (sentence -> proc .)
    RBRACE          reduce using rule 16 (sentence -> proc .)
    FINDESDE        reduce using rule 16 (sentence -> proc .)


state 42

    (48) var_assign -> IDEN . EQUALS expression

    EQUALS          shift and go to state 30


state 43

    (26) do -> DESDE IDEN . EQUALS expression HASTA expression HAGA actions FINDESDE

    EQUALS          shift and go to state 63


state 44

    (34) syntax1 -> ENCASO options1 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 64


state 45

    (30) syntax2 -> ENCASO IDEN . options2 SINO LBRACE actions RBRACE FINCASO
    (31) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2

    CUANDO          shift and go to state 66

    options2                       shift and go to state 65

state 46

    (35) options1 -> CUANDO . comparative ENTONS LBRACE actions RBRACE more_options1
    (47) comparative -> . IDEN condition expression

    IDEN            shift and go to state 68

    comparative                    shift and go to state 67

state 47

    (20) moves -> MOVER LPAR . IDEN RPAR

    IDEN            shift and go to state 69


state 48

    (21) random -> ALEATORIO LPAR . RPAR

    RPAR            shift and go to state 70


state 49

    (22) changes -> changes_aux LPAR . IDEN COMMA INT RPAR

    IDEN            shift and go to state 71


state 50

    (50) expression -> IDEN .

    MULTIPLY        reduce using rule 50 (expression -> IDEN .)
    DIVIDE          reduce using rule 50 (expression -> IDEN .)
    PLUS            reduce using rule 50 (expression -> IDEN .)
    MINUS           reduce using rule 50 (expression -> IDEN .)
    $end            reduce using rule 50 (expression -> IDEN .)
    ENTONS          reduce using rule 50 (expression -> IDEN .)
    SEPARATOR       reduce using rule 50 (expression -> IDEN .)
    MIENTRAS        reduce using rule 50 (expression -> IDEN .)
    RBRACE          reduce using rule 50 (expression -> IDEN .)
    FINDESDE        reduce using rule 50 (expression -> IDEN .)
    COMMA           reduce using rule 50 (expression -> IDEN .)
    RPAR            reduce using rule 50 (expression -> IDEN .)
    HASTA           reduce using rule 50 (expression -> IDEN .)
    HAGA            reduce using rule 50 (expression -> IDEN .)


state 51

    (47) comparative -> IDEN condition expression .
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

    $end            reduce using rule 47 (comparative -> IDEN condition expression .)
    ENTONS          reduce using rule 47 (comparative -> IDEN condition expression .)
    SEPARATOR       reduce using rule 47 (comparative -> IDEN condition expression .)
    MIENTRAS        reduce using rule 47 (comparative -> IDEN condition expression .)
    RBRACE          reduce using rule 47 (comparative -> IDEN condition expression .)
    FINDESDE        reduce using rule 47 (comparative -> IDEN condition expression .)
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    operator                       shift and go to state 72

state 52

    (51) expression -> INT .

    MULTIPLY        reduce using rule 51 (expression -> INT .)
    DIVIDE          reduce using rule 51 (expression -> INT .)
    PLUS            reduce using rule 51 (expression -> INT .)
    MINUS           reduce using rule 51 (expression -> INT .)
    $end            reduce using rule 51 (expression -> INT .)
    ENTONS          reduce using rule 51 (expression -> INT .)
    SEPARATOR       reduce using rule 51 (expression -> INT .)
    MIENTRAS        reduce using rule 51 (expression -> INT .)
    RBRACE          reduce using rule 51 (expression -> INT .)
    FINDESDE        reduce using rule 51 (expression -> INT .)
    COMMA           reduce using rule 51 (expression -> INT .)
    RPAR            reduce using rule 51 (expression -> INT .)
    HASTA           reduce using rule 51 (expression -> INT .)
    HAGA            reduce using rule 51 (expression -> INT .)


state 53

    (48) var_assign -> IDEN EQUALS expression .
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

    $end            reduce using rule 48 (var_assign -> IDEN EQUALS expression .)
    SEPARATOR       reduce using rule 48 (var_assign -> IDEN EQUALS expression .)
    MIENTRAS        reduce using rule 48 (var_assign -> IDEN EQUALS expression .)
    RBRACE          reduce using rule 48 (var_assign -> IDEN EQUALS expression .)
    FINDESDE        reduce using rule 48 (var_assign -> IDEN EQUALS expression .)
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    operator                       shift and go to state 72

state 54

    (43) var_declare -> DCL IDEN value .

    $end            reduce using rule 43 (var_declare -> DCL IDEN value .)


state 55

    (44) value -> initialize .

    $end            reduce using rule 44 (value -> initialize .)


state 56

    (45) value -> empty .

    $end            reduce using rule 45 (value -> empty .)


state 57

    (46) initialize -> ASSIGN . expression
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 77

state 58

    (7) proc -> LLAMAR IDEN LPAR . params RPAR
    (8) params -> . expression more_params
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    params                         shift and go to state 78
    expression                     shift and go to state 79

state 59

    (27) repeat -> REPITA actions MIENTRAS . comparative
    (47) comparative -> . IDEN condition expression

    IDEN            shift and go to state 68

    comparative                    shift and go to state 80

state 60

    (38) actions -> sentence more_actions .

    MIENTRAS        reduce using rule 38 (actions -> sentence more_actions .)
    RBRACE          reduce using rule 38 (actions -> sentence more_actions .)
    FINDESDE        reduce using rule 38 (actions -> sentence more_actions .)


state 61

    (39) more_actions -> SEPARATOR . more_actions_aux
    (41) more_actions_aux -> . actions
    (42) more_actions_aux -> . empty
    (38) actions -> . sentence more_actions
    (62) empty -> .
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    MIENTRAS        reduce using rule 62 (empty -> .)
    RBRACE          reduce using rule 62 (empty -> .)
    FINDESDE        reduce using rule 62 (empty -> .)
    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    more_actions_aux               shift and go to state 81
    actions                        shift and go to state 82
    empty                          shift and go to state 83
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 62

    (40) more_actions -> empty .

    MIENTRAS        reduce using rule 40 (more_actions -> empty .)
    RBRACE          reduce using rule 40 (more_actions -> empty .)
    FINDESDE        reduce using rule 40 (more_actions -> empty .)


state 63

    (26) do -> DESDE IDEN EQUALS . expression HASTA expression HAGA actions FINDESDE
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 84

state 64

    (34) syntax1 -> ENCASO options1 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 85


state 65

    (30) syntax2 -> ENCASO IDEN options2 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 86


state 66

    (31) options2 -> CUANDO . condition expression ENTONS LBRACE actions RBRACE more_options2
    (56) condition -> . SAME
    (57) condition -> . LESS
    (58) condition -> . MORE
    (59) condition -> . NON_EQUAL
    (60) condition -> . LESS_EQUAL
    (61) condition -> . MORE_EQUAL

    SAME            shift and go to state 31
    LESS            shift and go to state 32
    MORE            shift and go to state 33
    NON_EQUAL       shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    MORE_EQUAL      shift and go to state 36

    condition                      shift and go to state 87

state 67

    (35) options1 -> CUANDO comparative . ENTONS LBRACE actions RBRACE more_options1

    ENTONS          shift and go to state 88


state 68

    (47) comparative -> IDEN . condition expression
    (56) condition -> . SAME
    (57) condition -> . LESS
    (58) condition -> . MORE
    (59) condition -> . NON_EQUAL
    (60) condition -> . LESS_EQUAL
    (61) condition -> . MORE_EQUAL

    SAME            shift and go to state 31
    LESS            shift and go to state 32
    MORE            shift and go to state 33
    NON_EQUAL       shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    MORE_EQUAL      shift and go to state 36

    condition                      shift and go to state 29

state 69

    (20) moves -> MOVER LPAR IDEN . RPAR

    RPAR            shift and go to state 89


state 70

    (21) random -> ALEATORIO LPAR RPAR .

    $end            reduce using rule 21 (random -> ALEATORIO LPAR RPAR .)
    SEPARATOR       reduce using rule 21 (random -> ALEATORIO LPAR RPAR .)
    MIENTRAS        reduce using rule 21 (random -> ALEATORIO LPAR RPAR .)
    RBRACE          reduce using rule 21 (random -> ALEATORIO LPAR RPAR .)
    FINDESDE        reduce using rule 21 (random -> ALEATORIO LPAR RPAR .)


state 71

    (22) changes -> changes_aux LPAR IDEN . COMMA INT RPAR

    COMMA           shift and go to state 90


state 72

    (49) expression -> expression operator . expression
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 91

state 73

    (52) operator -> MULTIPLY .

    IDEN            reduce using rule 52 (operator -> MULTIPLY .)
    INT             reduce using rule 52 (operator -> MULTIPLY .)


state 74

    (53) operator -> DIVIDE .

    IDEN            reduce using rule 53 (operator -> DIVIDE .)
    INT             reduce using rule 53 (operator -> DIVIDE .)


state 75

    (54) operator -> PLUS .

    IDEN            reduce using rule 54 (operator -> PLUS .)
    INT             reduce using rule 54 (operator -> PLUS .)


state 76

    (55) operator -> MINUS .

    IDEN            reduce using rule 55 (operator -> MINUS .)
    INT             reduce using rule 55 (operator -> MINUS .)


state 77

    (46) initialize -> ASSIGN expression .
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

    $end            reduce using rule 46 (initialize -> ASSIGN expression .)
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    operator                       shift and go to state 72

state 78

    (7) proc -> LLAMAR IDEN LPAR params . RPAR

    RPAR            shift and go to state 92


state 79

    (8) params -> expression . more_params
    (49) expression -> expression . operator expression
    (9) more_params -> . COMMA params
    (10) more_params -> . empty
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS
    (62) empty -> .

    COMMA           shift and go to state 94
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    RPAR            reduce using rule 62 (empty -> .)

    more_params                    shift and go to state 93
    operator                       shift and go to state 72
    empty                          shift and go to state 95

state 80

    (27) repeat -> REPITA actions MIENTRAS comparative .

    $end            reduce using rule 27 (repeat -> REPITA actions MIENTRAS comparative .)
    SEPARATOR       reduce using rule 27 (repeat -> REPITA actions MIENTRAS comparative .)
    MIENTRAS        reduce using rule 27 (repeat -> REPITA actions MIENTRAS comparative .)
    RBRACE          reduce using rule 27 (repeat -> REPITA actions MIENTRAS comparative .)
    FINDESDE        reduce using rule 27 (repeat -> REPITA actions MIENTRAS comparative .)


state 81

    (39) more_actions -> SEPARATOR more_actions_aux .

    MIENTRAS        reduce using rule 39 (more_actions -> SEPARATOR more_actions_aux .)
    RBRACE          reduce using rule 39 (more_actions -> SEPARATOR more_actions_aux .)
    FINDESDE        reduce using rule 39 (more_actions -> SEPARATOR more_actions_aux .)


state 82

    (41) more_actions_aux -> actions .

    MIENTRAS        reduce using rule 41 (more_actions_aux -> actions .)
    RBRACE          reduce using rule 41 (more_actions_aux -> actions .)
    FINDESDE        reduce using rule 41 (more_actions_aux -> actions .)


state 83

    (42) more_actions_aux -> empty .

    MIENTRAS        reduce using rule 42 (more_actions_aux -> empty .)
    RBRACE          reduce using rule 42 (more_actions_aux -> empty .)
    FINDESDE        reduce using rule 42 (more_actions_aux -> empty .)


state 84

    (26) do -> DESDE IDEN EQUALS expression . HASTA expression HAGA actions FINDESDE
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

    HASTA           shift and go to state 96
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    operator                       shift and go to state 72

state 85

    (34) syntax1 -> ENCASO options1 SINO LBRACE . actions RBRACE FINCASO
    (38) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 97
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 86

    (30) syntax2 -> ENCASO IDEN options2 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 98


state 87

    (31) options2 -> CUANDO condition . expression ENTONS LBRACE actions RBRACE more_options2
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 99

state 88

    (35) options1 -> CUANDO comparative ENTONS . LBRACE actions RBRACE more_options1

    LBRACE          shift and go to state 100


state 89

    (20) moves -> MOVER LPAR IDEN RPAR .

    $end            reduce using rule 20 (moves -> MOVER LPAR IDEN RPAR .)
    SEPARATOR       reduce using rule 20 (moves -> MOVER LPAR IDEN RPAR .)
    MIENTRAS        reduce using rule 20 (moves -> MOVER LPAR IDEN RPAR .)
    RBRACE          reduce using rule 20 (moves -> MOVER LPAR IDEN RPAR .)
    FINDESDE        reduce using rule 20 (moves -> MOVER LPAR IDEN RPAR .)


state 90

    (22) changes -> changes_aux LPAR IDEN COMMA . INT RPAR

    INT             shift and go to state 101


state 91

    (49) expression -> expression operator expression .
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 49 (expression -> expression operator expression .)
    ENTONS          reduce using rule 49 (expression -> expression operator expression .)
    SEPARATOR       reduce using rule 49 (expression -> expression operator expression .)
    MIENTRAS        reduce using rule 49 (expression -> expression operator expression .)
    RBRACE          reduce using rule 49 (expression -> expression operator expression .)
    FINDESDE        reduce using rule 49 (expression -> expression operator expression .)
    COMMA           reduce using rule 49 (expression -> expression operator expression .)
    RPAR            reduce using rule 49 (expression -> expression operator expression .)
    HASTA           reduce using rule 49 (expression -> expression operator expression .)
    HAGA            reduce using rule 49 (expression -> expression operator expression .)
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

  ! MULTIPLY        [ reduce using rule 49 (expression -> expression operator expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression operator expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression operator expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression operator expression .) ]

    operator                       shift and go to state 72

state 92

    (7) proc -> LLAMAR IDEN LPAR params RPAR .

    $end            reduce using rule 7 (proc -> LLAMAR IDEN LPAR params RPAR .)
    SEPARATOR       reduce using rule 7 (proc -> LLAMAR IDEN LPAR params RPAR .)
    MIENTRAS        reduce using rule 7 (proc -> LLAMAR IDEN LPAR params RPAR .)
    RBRACE          reduce using rule 7 (proc -> LLAMAR IDEN LPAR params RPAR .)
    FINDESDE        reduce using rule 7 (proc -> LLAMAR IDEN LPAR params RPAR .)


state 93

    (8) params -> expression more_params .

    RPAR            reduce using rule 8 (params -> expression more_params .)


state 94

    (9) more_params -> COMMA . params
    (8) params -> . expression more_params
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    params                         shift and go to state 102
    expression                     shift and go to state 79

state 95

    (10) more_params -> empty .

    RPAR            reduce using rule 10 (more_params -> empty .)


state 96

    (26) do -> DESDE IDEN EQUALS expression HASTA . expression HAGA actions FINDESDE
    (49) expression -> . expression operator expression
    (50) expression -> . IDEN
    (51) expression -> . INT

    IDEN            shift and go to state 50
    INT             shift and go to state 52

    expression                     shift and go to state 103

state 97

    (34) syntax1 -> ENCASO options1 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 104


state 98

    (30) syntax2 -> ENCASO IDEN options2 SINO LBRACE . actions RBRACE FINCASO
    (38) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 105
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 99

    (31) options2 -> CUANDO condition expression . ENTONS LBRACE actions RBRACE more_options2
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

    ENTONS          shift and go to state 106
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    operator                       shift and go to state 72

state 100

    (35) options1 -> CUANDO comparative ENTONS LBRACE . actions RBRACE more_options1
    (38) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 107
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 101

    (22) changes -> changes_aux LPAR IDEN COMMA INT . RPAR

    RPAR            shift and go to state 108


state 102

    (9) more_params -> COMMA params .

    RPAR            reduce using rule 9 (more_params -> COMMA params .)


state 103

    (26) do -> DESDE IDEN EQUALS expression HASTA expression . HAGA actions FINDESDE
    (49) expression -> expression . operator expression
    (52) operator -> . MULTIPLY
    (53) operator -> . DIVIDE
    (54) operator -> . PLUS
    (55) operator -> . MINUS

    HAGA            shift and go to state 109
    MULTIPLY        shift and go to state 73
    DIVIDE          shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    operator                       shift and go to state 72

state 104

    (34) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 110


state 105

    (30) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 111


state 106

    (31) options2 -> CUANDO condition expression ENTONS . LBRACE actions RBRACE more_options2

    LBRACE          shift and go to state 112


state 107

    (35) options1 -> CUANDO comparative ENTONS LBRACE actions . RBRACE more_options1

    RBRACE          shift and go to state 113


state 108

    (22) changes -> changes_aux LPAR IDEN COMMA INT RPAR .

    $end            reduce using rule 22 (changes -> changes_aux LPAR IDEN COMMA INT RPAR .)
    SEPARATOR       reduce using rule 22 (changes -> changes_aux LPAR IDEN COMMA INT RPAR .)
    MIENTRAS        reduce using rule 22 (changes -> changes_aux LPAR IDEN COMMA INT RPAR .)
    RBRACE          reduce using rule 22 (changes -> changes_aux LPAR IDEN COMMA INT RPAR .)
    FINDESDE        reduce using rule 22 (changes -> changes_aux LPAR IDEN COMMA INT RPAR .)


state 109

    (26) do -> DESDE IDEN EQUALS expression HASTA expression HAGA . actions FINDESDE
    (38) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 114
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 110

    (34) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 34 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    SEPARATOR       reduce using rule 34 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    MIENTRAS        reduce using rule 34 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    RBRACE          reduce using rule 34 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    FINDESDE        reduce using rule 34 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)


state 111

    (30) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 115


state 112

    (31) options2 -> CUANDO condition expression ENTONS LBRACE . actions RBRACE more_options2
    (38) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (16) sentence -> . proc
    (48) var_assign -> . IDEN EQUALS expression
    (28) cases -> . syntax1
    (29) cases -> . syntax2
    (27) repeat -> . REPITA actions MIENTRAS comparative
    (26) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (17) function -> . moves
    (18) function -> . random
    (19) function -> . changes
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (34) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (30) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (20) moves -> . MOVER LPAR IDEN RPAR
    (21) random -> . ALEATORIO LPAR RPAR
    (22) changes -> . changes_aux LPAR IDEN COMMA INT RPAR
    (23) changes_aux -> . INC
    (24) changes_aux -> . DEC
    (25) changes_aux -> . INI

    IDEN            shift and go to state 42
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    LLAMAR          shift and go to state 14
    ENCASO          shift and go to state 22
    MOVER           shift and go to state 23
    ALEATORIO       shift and go to state 24
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 116
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    proc                           shift and go to state 41
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    changes_aux                    shift and go to state 25

state 113

    (35) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE . more_options1
    (36) more_options1 -> . options1
    (37) more_options1 -> . empty
    (35) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
    (62) empty -> .

    CUANDO          shift and go to state 46
    SINO            reduce using rule 62 (empty -> .)

    more_options1                  shift and go to state 117
    options1                       shift and go to state 118
    empty                          shift and go to state 119

state 114

    (26) do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions . FINDESDE

    FINDESDE        shift and go to state 120


state 115

    (30) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 30 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    SEPARATOR       reduce using rule 30 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    MIENTRAS        reduce using rule 30 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    RBRACE          reduce using rule 30 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    FINDESDE        reduce using rule 30 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)


state 116

    (31) options2 -> CUANDO condition expression ENTONS LBRACE actions . RBRACE more_options2

    RBRACE          shift and go to state 121


state 117

    (35) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .

    SINO            reduce using rule 35 (options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .)


state 118

    (36) more_options1 -> options1 .

    SINO            reduce using rule 36 (more_options1 -> options1 .)


state 119

    (37) more_options1 -> empty .

    SINO            reduce using rule 37 (more_options1 -> empty .)


state 120

    (26) do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .

    $end            reduce using rule 26 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    SEPARATOR       reduce using rule 26 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    MIENTRAS        reduce using rule 26 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    RBRACE          reduce using rule 26 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    FINDESDE        reduce using rule 26 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)


state 121

    (31) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE . more_options2
    (32) more_options2 -> . options2
    (33) more_options2 -> . empty
    (31) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
    (62) empty -> .

    CUANDO          shift and go to state 66
    SINO            reduce using rule 62 (empty -> .)

    more_options2                  shift and go to state 122
    options2                       shift and go to state 123
    empty                          shift and go to state 124

state 122

    (31) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .

    SINO            reduce using rule 31 (options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .)


state 123

    (32) more_options2 -> options2 .

    SINO            reduce using rule 32 (more_options2 -> options2 .)


state 124

    (33) more_options2 -> empty .

    SINO            reduce using rule 33 (more_options2 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (parse -> proc)
WARNING: rejected rule (sentence -> proc) in state 5
