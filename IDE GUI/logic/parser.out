Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> parse
Rule 1     parse -> comparative
Rule 2     parse -> sentence
Rule 3     parse -> cases
Rule 4     parse -> empty
Rule 5     parse -> repeat
Rule 6     repeat -> REPITA actions MIENTRAS comparative
Rule 7     cases -> syntax1
Rule 8     cases -> syntax2
Rule 9     syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
Rule 10    options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
Rule 11    more_options2 -> options2
Rule 12    more_options2 -> empty
Rule 13    syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO
Rule 14    options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
Rule 15    more_options1 -> options1
Rule 16    more_options1 -> empty
Rule 17    actions -> var_assign more_actions
Rule 18    more_actions -> SEPARATOR actions
Rule 19    more_actions -> empty
Rule 20    sentence -> var_declare
Rule 21    sentence -> var_assign
Rule 22    var_declare -> DCL IDEN value
Rule 23    value -> initialize
Rule 24    value -> empty
Rule 25    initialize -> ASSIGN expression
Rule 26    comparative -> IDEN condition expression
Rule 27    var_assign -> IDEN EQUALS expression
Rule 28    expression -> expression operator expression
Rule 29    expression -> IDEN
Rule 30    expression -> INT
Rule 31    operator -> MULTIPLY
Rule 32    operator -> DIVIDE
Rule 33    operator -> PLUS
Rule 34    operator -> MINUS
Rule 35    condition -> SAME
Rule 36    condition -> LESS
Rule 37    condition -> MORE
Rule 38    condition -> NON_EQUAL
Rule 39    condition -> LESS_EQUAL
Rule 40    condition -> MORE_EQUAL
Rule 41    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 25
CUANDO               : 10 14
DCL                  : 22
DIVIDE               : 32
ENCASO               : 9 13
ENTONS               : 10 14
EQUALS               : 27
FINCASO              : 9 13
IDEN                 : 9 22 26 27 29
INT                  : 30
LBRACE               : 9 10 13 14
LESS                 : 36
LESS_EQUAL           : 39
MIENTRAS             : 6
MINUS                : 34
MORE                 : 37
MORE_EQUAL           : 40
MULTIPLY             : 31
NON_EQUAL            : 38
PLUS                 : 33
RBRACE               : 9 10 13 14
REPITA               : 6
SAME                 : 35
SEPARATOR            : 18
SINO                 : 9 13
error                : 

Nonterminals, with rules where they appear

actions              : 6 9 10 13 14 18
cases                : 3
comparative          : 1 6 14
condition            : 10 26
empty                : 4 12 16 19 24
expression           : 10 25 26 27 28 28
initialize           : 23
more_actions         : 17
more_options1        : 14
more_options2        : 10
operator             : 28
options1             : 13 15
options2             : 9 11
parse                : 0
repeat               : 5
sentence             : 2
syntax1              : 7
syntax2              : 8
value                : 22
var_assign           : 17 21
var_declare          : 20

Parsing method: LALR

state 0

    (0) S' -> . parse
    (1) parse -> . comparative
    (2) parse -> . sentence
    (3) parse -> . cases
    (4) parse -> . empty
    (5) parse -> . repeat
    (26) comparative -> . IDEN condition expression
    (20) sentence -> . var_declare
    (21) sentence -> . var_assign
    (7) cases -> . syntax1
    (8) cases -> . syntax2
    (41) empty -> .
    (6) repeat -> . REPITA actions MIENTRAS comparative
    (22) var_declare -> . DCL IDEN value
    (27) var_assign -> . IDEN EQUALS expression
    (13) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (9) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO

    IDEN            shift and go to state 7
    $end            reduce using rule 41 (empty -> .)
    REPITA          shift and go to state 12
    DCL             shift and go to state 13
    ENCASO          shift and go to state 14

    parse                          shift and go to state 1
    comparative                    shift and go to state 2
    sentence                       shift and go to state 3
    cases                          shift and go to state 4
    empty                          shift and go to state 5
    repeat                         shift and go to state 6
    var_declare                    shift and go to state 8
    var_assign                     shift and go to state 9
    syntax1                        shift and go to state 10
    syntax2                        shift and go to state 11

state 1

    (0) S' -> parse .



state 2

    (1) parse -> comparative .

    $end            reduce using rule 1 (parse -> comparative .)


state 3

    (2) parse -> sentence .

    $end            reduce using rule 2 (parse -> sentence .)


state 4

    (3) parse -> cases .

    $end            reduce using rule 3 (parse -> cases .)


state 5

    (4) parse -> empty .

    $end            reduce using rule 4 (parse -> empty .)


state 6

    (5) parse -> repeat .

    $end            reduce using rule 5 (parse -> repeat .)


state 7

    (26) comparative -> IDEN . condition expression
    (27) var_assign -> IDEN . EQUALS expression
    (35) condition -> . SAME
    (36) condition -> . LESS
    (37) condition -> . MORE
    (38) condition -> . NON_EQUAL
    (39) condition -> . LESS_EQUAL
    (40) condition -> . MORE_EQUAL

    EQUALS          shift and go to state 16
    SAME            shift and go to state 17
    LESS            shift and go to state 18
    MORE            shift and go to state 19
    NON_EQUAL       shift and go to state 20
    LESS_EQUAL      shift and go to state 21
    MORE_EQUAL      shift and go to state 22

    condition                      shift and go to state 15

state 8

    (20) sentence -> var_declare .

    $end            reduce using rule 20 (sentence -> var_declare .)


state 9

    (21) sentence -> var_assign .

    $end            reduce using rule 21 (sentence -> var_assign .)


state 10

    (7) cases -> syntax1 .

    $end            reduce using rule 7 (cases -> syntax1 .)


state 11

    (8) cases -> syntax2 .

    $end            reduce using rule 8 (cases -> syntax2 .)


state 12

    (6) repeat -> REPITA . actions MIENTRAS comparative
    (17) actions -> . var_assign more_actions
    (27) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 25

    actions                        shift and go to state 23
    var_assign                     shift and go to state 24

state 13

    (22) var_declare -> DCL . IDEN value

    IDEN            shift and go to state 26


state 14

    (13) syntax1 -> ENCASO . options1 SINO LBRACE actions RBRACE FINCASO
    (9) syntax2 -> ENCASO . IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (14) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1

    IDEN            shift and go to state 28
    CUANDO          shift and go to state 29

    options1                       shift and go to state 27

state 15

    (26) comparative -> IDEN condition . expression
    (28) expression -> . expression operator expression
    (29) expression -> . IDEN
    (30) expression -> . INT

    IDEN            shift and go to state 30
    INT             shift and go to state 32

    expression                     shift and go to state 31

state 16

    (27) var_assign -> IDEN EQUALS . expression
    (28) expression -> . expression operator expression
    (29) expression -> . IDEN
    (30) expression -> . INT

    IDEN            shift and go to state 30
    INT             shift and go to state 32

    expression                     shift and go to state 33

state 17

    (35) condition -> SAME .

    IDEN            reduce using rule 35 (condition -> SAME .)
    INT             reduce using rule 35 (condition -> SAME .)


state 18

    (36) condition -> LESS .

    IDEN            reduce using rule 36 (condition -> LESS .)
    INT             reduce using rule 36 (condition -> LESS .)


state 19

    (37) condition -> MORE .

    IDEN            reduce using rule 37 (condition -> MORE .)
    INT             reduce using rule 37 (condition -> MORE .)


state 20

    (38) condition -> NON_EQUAL .

    IDEN            reduce using rule 38 (condition -> NON_EQUAL .)
    INT             reduce using rule 38 (condition -> NON_EQUAL .)


state 21

    (39) condition -> LESS_EQUAL .

    IDEN            reduce using rule 39 (condition -> LESS_EQUAL .)
    INT             reduce using rule 39 (condition -> LESS_EQUAL .)


state 22

    (40) condition -> MORE_EQUAL .

    IDEN            reduce using rule 40 (condition -> MORE_EQUAL .)
    INT             reduce using rule 40 (condition -> MORE_EQUAL .)


state 23

    (6) repeat -> REPITA actions . MIENTRAS comparative

    MIENTRAS        shift and go to state 34


state 24

    (17) actions -> var_assign . more_actions
    (18) more_actions -> . SEPARATOR actions
    (19) more_actions -> . empty
    (41) empty -> .

    SEPARATOR       shift and go to state 36
    MIENTRAS        reduce using rule 41 (empty -> .)
    RBRACE          reduce using rule 41 (empty -> .)

    more_actions                   shift and go to state 35
    empty                          shift and go to state 37

state 25

    (27) var_assign -> IDEN . EQUALS expression

    EQUALS          shift and go to state 16


state 26

    (22) var_declare -> DCL IDEN . value
    (23) value -> . initialize
    (24) value -> . empty
    (25) initialize -> . ASSIGN expression
    (41) empty -> .

    ASSIGN          shift and go to state 41
    $end            reduce using rule 41 (empty -> .)

    value                          shift and go to state 38
    initialize                     shift and go to state 39
    empty                          shift and go to state 40

state 27

    (13) syntax1 -> ENCASO options1 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 42


state 28

    (9) syntax2 -> ENCASO IDEN . options2 SINO LBRACE actions RBRACE FINCASO
    (10) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2

    CUANDO          shift and go to state 44

    options2                       shift and go to state 43

state 29

    (14) options1 -> CUANDO . comparative ENTONS LBRACE actions RBRACE more_options1
    (26) comparative -> . IDEN condition expression

    IDEN            shift and go to state 46

    comparative                    shift and go to state 45

state 30

    (29) expression -> IDEN .

    MULTIPLY        reduce using rule 29 (expression -> IDEN .)
    DIVIDE          reduce using rule 29 (expression -> IDEN .)
    PLUS            reduce using rule 29 (expression -> IDEN .)
    MINUS           reduce using rule 29 (expression -> IDEN .)
    $end            reduce using rule 29 (expression -> IDEN .)
    ENTONS          reduce using rule 29 (expression -> IDEN .)
    SEPARATOR       reduce using rule 29 (expression -> IDEN .)
    MIENTRAS        reduce using rule 29 (expression -> IDEN .)
    RBRACE          reduce using rule 29 (expression -> IDEN .)


state 31

    (26) comparative -> IDEN condition expression .
    (28) expression -> expression . operator expression
    (31) operator -> . MULTIPLY
    (32) operator -> . DIVIDE
    (33) operator -> . PLUS
    (34) operator -> . MINUS

    $end            reduce using rule 26 (comparative -> IDEN condition expression .)
    ENTONS          reduce using rule 26 (comparative -> IDEN condition expression .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

    operator                       shift and go to state 47

state 32

    (30) expression -> INT .

    MULTIPLY        reduce using rule 30 (expression -> INT .)
    DIVIDE          reduce using rule 30 (expression -> INT .)
    PLUS            reduce using rule 30 (expression -> INT .)
    MINUS           reduce using rule 30 (expression -> INT .)
    $end            reduce using rule 30 (expression -> INT .)
    ENTONS          reduce using rule 30 (expression -> INT .)
    SEPARATOR       reduce using rule 30 (expression -> INT .)
    MIENTRAS        reduce using rule 30 (expression -> INT .)
    RBRACE          reduce using rule 30 (expression -> INT .)


state 33

    (27) var_assign -> IDEN EQUALS expression .
    (28) expression -> expression . operator expression
    (31) operator -> . MULTIPLY
    (32) operator -> . DIVIDE
    (33) operator -> . PLUS
    (34) operator -> . MINUS

    $end            reduce using rule 27 (var_assign -> IDEN EQUALS expression .)
    SEPARATOR       reduce using rule 27 (var_assign -> IDEN EQUALS expression .)
    MIENTRAS        reduce using rule 27 (var_assign -> IDEN EQUALS expression .)
    RBRACE          reduce using rule 27 (var_assign -> IDEN EQUALS expression .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

    operator                       shift and go to state 47

state 34

    (6) repeat -> REPITA actions MIENTRAS . comparative
    (26) comparative -> . IDEN condition expression

    IDEN            shift and go to state 46

    comparative                    shift and go to state 52

state 35

    (17) actions -> var_assign more_actions .

    MIENTRAS        reduce using rule 17 (actions -> var_assign more_actions .)
    RBRACE          reduce using rule 17 (actions -> var_assign more_actions .)


state 36

    (18) more_actions -> SEPARATOR . actions
    (17) actions -> . var_assign more_actions
    (27) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 25

    actions                        shift and go to state 53
    var_assign                     shift and go to state 24

state 37

    (19) more_actions -> empty .

    MIENTRAS        reduce using rule 19 (more_actions -> empty .)
    RBRACE          reduce using rule 19 (more_actions -> empty .)


state 38

    (22) var_declare -> DCL IDEN value .

    $end            reduce using rule 22 (var_declare -> DCL IDEN value .)


state 39

    (23) value -> initialize .

    $end            reduce using rule 23 (value -> initialize .)


state 40

    (24) value -> empty .

    $end            reduce using rule 24 (value -> empty .)


state 41

    (25) initialize -> ASSIGN . expression
    (28) expression -> . expression operator expression
    (29) expression -> . IDEN
    (30) expression -> . INT

    IDEN            shift and go to state 30
    INT             shift and go to state 32

    expression                     shift and go to state 54

state 42

    (13) syntax1 -> ENCASO options1 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 55


state 43

    (9) syntax2 -> ENCASO IDEN options2 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 56


state 44

    (10) options2 -> CUANDO . condition expression ENTONS LBRACE actions RBRACE more_options2
    (35) condition -> . SAME
    (36) condition -> . LESS
    (37) condition -> . MORE
    (38) condition -> . NON_EQUAL
    (39) condition -> . LESS_EQUAL
    (40) condition -> . MORE_EQUAL

    SAME            shift and go to state 17
    LESS            shift and go to state 18
    MORE            shift and go to state 19
    NON_EQUAL       shift and go to state 20
    LESS_EQUAL      shift and go to state 21
    MORE_EQUAL      shift and go to state 22

    condition                      shift and go to state 57

state 45

    (14) options1 -> CUANDO comparative . ENTONS LBRACE actions RBRACE more_options1

    ENTONS          shift and go to state 58


state 46

    (26) comparative -> IDEN . condition expression
    (35) condition -> . SAME
    (36) condition -> . LESS
    (37) condition -> . MORE
    (38) condition -> . NON_EQUAL
    (39) condition -> . LESS_EQUAL
    (40) condition -> . MORE_EQUAL

    SAME            shift and go to state 17
    LESS            shift and go to state 18
    MORE            shift and go to state 19
    NON_EQUAL       shift and go to state 20
    LESS_EQUAL      shift and go to state 21
    MORE_EQUAL      shift and go to state 22

    condition                      shift and go to state 15

state 47

    (28) expression -> expression operator . expression
    (28) expression -> . expression operator expression
    (29) expression -> . IDEN
    (30) expression -> . INT

    IDEN            shift and go to state 30
    INT             shift and go to state 32

    expression                     shift and go to state 59

state 48

    (31) operator -> MULTIPLY .

    IDEN            reduce using rule 31 (operator -> MULTIPLY .)
    INT             reduce using rule 31 (operator -> MULTIPLY .)


state 49

    (32) operator -> DIVIDE .

    IDEN            reduce using rule 32 (operator -> DIVIDE .)
    INT             reduce using rule 32 (operator -> DIVIDE .)


state 50

    (33) operator -> PLUS .

    IDEN            reduce using rule 33 (operator -> PLUS .)
    INT             reduce using rule 33 (operator -> PLUS .)


state 51

    (34) operator -> MINUS .

    IDEN            reduce using rule 34 (operator -> MINUS .)
    INT             reduce using rule 34 (operator -> MINUS .)


state 52

    (6) repeat -> REPITA actions MIENTRAS comparative .

    $end            reduce using rule 6 (repeat -> REPITA actions MIENTRAS comparative .)


state 53

    (18) more_actions -> SEPARATOR actions .

    MIENTRAS        reduce using rule 18 (more_actions -> SEPARATOR actions .)
    RBRACE          reduce using rule 18 (more_actions -> SEPARATOR actions .)


state 54

    (25) initialize -> ASSIGN expression .
    (28) expression -> expression . operator expression
    (31) operator -> . MULTIPLY
    (32) operator -> . DIVIDE
    (33) operator -> . PLUS
    (34) operator -> . MINUS

    $end            reduce using rule 25 (initialize -> ASSIGN expression .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

    operator                       shift and go to state 47

state 55

    (13) syntax1 -> ENCASO options1 SINO LBRACE . actions RBRACE FINCASO
    (17) actions -> . var_assign more_actions
    (27) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 25

    actions                        shift and go to state 60
    var_assign                     shift and go to state 24

state 56

    (9) syntax2 -> ENCASO IDEN options2 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 61


state 57

    (10) options2 -> CUANDO condition . expression ENTONS LBRACE actions RBRACE more_options2
    (28) expression -> . expression operator expression
    (29) expression -> . IDEN
    (30) expression -> . INT

    IDEN            shift and go to state 30
    INT             shift and go to state 32

    expression                     shift and go to state 62

state 58

    (14) options1 -> CUANDO comparative ENTONS . LBRACE actions RBRACE more_options1

    LBRACE          shift and go to state 63


state 59

    (28) expression -> expression operator expression .
    (28) expression -> expression . operator expression
    (31) operator -> . MULTIPLY
    (32) operator -> . DIVIDE
    (33) operator -> . PLUS
    (34) operator -> . MINUS

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 28 (expression -> expression operator expression .)
    ENTONS          reduce using rule 28 (expression -> expression operator expression .)
    SEPARATOR       reduce using rule 28 (expression -> expression operator expression .)
    MIENTRAS        reduce using rule 28 (expression -> expression operator expression .)
    RBRACE          reduce using rule 28 (expression -> expression operator expression .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

  ! MULTIPLY        [ reduce using rule 28 (expression -> expression operator expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression operator expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression operator expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression operator expression .) ]

    operator                       shift and go to state 47

state 60

    (13) syntax1 -> ENCASO options1 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 64


state 61

    (9) syntax2 -> ENCASO IDEN options2 SINO LBRACE . actions RBRACE FINCASO
    (17) actions -> . var_assign more_actions
    (27) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 25

    actions                        shift and go to state 65
    var_assign                     shift and go to state 24

state 62

    (10) options2 -> CUANDO condition expression . ENTONS LBRACE actions RBRACE more_options2
    (28) expression -> expression . operator expression
    (31) operator -> . MULTIPLY
    (32) operator -> . DIVIDE
    (33) operator -> . PLUS
    (34) operator -> . MINUS

    ENTONS          shift and go to state 66
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51

    operator                       shift and go to state 47

state 63

    (14) options1 -> CUANDO comparative ENTONS LBRACE . actions RBRACE more_options1
    (17) actions -> . var_assign more_actions
    (27) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 25

    actions                        shift and go to state 67
    var_assign                     shift and go to state 24

state 64

    (13) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 68


state 65

    (9) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 69


state 66

    (10) options2 -> CUANDO condition expression ENTONS . LBRACE actions RBRACE more_options2

    LBRACE          shift and go to state 70


state 67

    (14) options1 -> CUANDO comparative ENTONS LBRACE actions . RBRACE more_options1

    RBRACE          shift and go to state 71


state 68

    (13) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 13 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)


state 69

    (9) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 72


state 70

    (10) options2 -> CUANDO condition expression ENTONS LBRACE . actions RBRACE more_options2
    (17) actions -> . var_assign more_actions
    (27) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 25

    actions                        shift and go to state 73
    var_assign                     shift and go to state 24

state 71

    (14) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE . more_options1
    (15) more_options1 -> . options1
    (16) more_options1 -> . empty
    (14) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
    (41) empty -> .

    CUANDO          shift and go to state 29
    SINO            reduce using rule 41 (empty -> .)

    more_options1                  shift and go to state 74
    options1                       shift and go to state 75
    empty                          shift and go to state 76

state 72

    (9) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 9 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)


state 73

    (10) options2 -> CUANDO condition expression ENTONS LBRACE actions . RBRACE more_options2

    RBRACE          shift and go to state 77


state 74

    (14) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .

    SINO            reduce using rule 14 (options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .)


state 75

    (15) more_options1 -> options1 .

    SINO            reduce using rule 15 (more_options1 -> options1 .)


state 76

    (16) more_options1 -> empty .

    SINO            reduce using rule 16 (more_options1 -> empty .)


state 77

    (10) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE . more_options2
    (11) more_options2 -> . options2
    (12) more_options2 -> . empty
    (10) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
    (41) empty -> .

    CUANDO          shift and go to state 44
    SINO            reduce using rule 41 (empty -> .)

    more_options2                  shift and go to state 78
    options2                       shift and go to state 79
    empty                          shift and go to state 80

state 78

    (10) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .

    SINO            reduce using rule 10 (options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .)


state 79

    (11) more_options2 -> options2 .

    SINO            reduce using rule 11 (more_options2 -> options2 .)


state 80

    (12) more_options2 -> empty .

    SINO            reduce using rule 12 (more_options2 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
