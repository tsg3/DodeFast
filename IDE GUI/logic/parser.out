Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> parse
Rule 1     parse -> comparative
Rule 2     parse -> sentence
Rule 3     parse -> var_declare
Rule 4     parse -> empty
Rule 5     sentence -> var_assign
Rule 6     sentence -> cases
Rule 7     sentence -> repeat
Rule 8     sentence -> do
Rule 9     sentence -> function
Rule 10    function -> moves
Rule 11    function -> random
Rule 12    function -> changes
Rule 13    changes -> MOVER LPAR IDEN RPAR
Rule 14    random -> ALEATORIO LPAR RPAR
Rule 15    moves -> moves_aux LPAR IDEN COMMA INT RPAR
Rule 16    moves_aux -> INC
Rule 17    moves_aux -> DEC
Rule 18    moves_aux -> INI
Rule 19    do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
Rule 20    repeat -> REPITA actions MIENTRAS comparative
Rule 21    cases -> syntax1
Rule 22    cases -> syntax2
Rule 23    syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
Rule 24    options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
Rule 25    more_options2 -> options2
Rule 26    more_options2 -> empty
Rule 27    syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO
Rule 28    options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
Rule 29    more_options1 -> options1
Rule 30    more_options1 -> empty
Rule 31    actions -> sentence more_actions
Rule 32    more_actions -> SEPARATOR more_actions_aux
Rule 33    more_actions -> empty
Rule 34    more_actions_aux -> actions
Rule 35    more_actions_aux -> empty
Rule 36    var_declare -> DCL IDEN value
Rule 37    value -> initialize
Rule 38    value -> empty
Rule 39    initialize -> ASSIGN expression
Rule 40    comparative -> IDEN condition expression
Rule 41    var_assign -> IDEN EQUALS expression
Rule 42    expression -> expression operator expression
Rule 43    expression -> IDEN
Rule 44    expression -> INT
Rule 45    operator -> MULTIPLY
Rule 46    operator -> DIVIDE
Rule 47    operator -> PLUS
Rule 48    operator -> MINUS
Rule 49    condition -> SAME
Rule 50    condition -> LESS
Rule 51    condition -> MORE
Rule 52    condition -> NON_EQUAL
Rule 53    condition -> LESS_EQUAL
Rule 54    condition -> MORE_EQUAL
Rule 55    empty -> <empty>

Terminals, with rules where they appear

ALEATORIO            : 14
ASSIGN               : 39
COMMA                : 15
CUANDO               : 24 28
DCL                  : 36
DEC                  : 17
DESDE                : 19
DIVIDE               : 46
ENCASO               : 23 27
ENTONS               : 24 28
EQUALS               : 19 41
FINCASO              : 23 27
FINDESDE             : 19
HAGA                 : 19
HASTA                : 19
IDEN                 : 13 15 19 23 36 40 41 43
INC                  : 16
INI                  : 18
INT                  : 15 44
LBRACE               : 23 24 27 28
LESS                 : 50
LESS_EQUAL           : 53
LPAR                 : 13 14 15
MIENTRAS             : 20
MINUS                : 48
MORE                 : 51
MORE_EQUAL           : 54
MOVER                : 13
MULTIPLY             : 45
NON_EQUAL            : 52
PLUS                 : 47
RBRACE               : 23 24 27 28
REPITA               : 20
RPAR                 : 13 14 15
SAME                 : 49
SEPARATOR            : 32
SINO                 : 23 27
error                : 

Nonterminals, with rules where they appear

actions              : 19 20 23 24 27 28 34
cases                : 6
changes              : 12
comparative          : 1 20 28
condition            : 24 40
do                   : 8
empty                : 4 26 30 33 35 38
expression           : 19 19 24 39 40 41 42 42
function             : 9
initialize           : 37
more_actions         : 31
more_actions_aux     : 32
more_options1        : 28
more_options2        : 24
moves                : 10
moves_aux            : 15
operator             : 42
options1             : 27 29
options2             : 23 25
parse                : 0
random               : 11
repeat               : 7
sentence             : 2 31
syntax1              : 21
syntax2              : 22
value                : 36
var_assign           : 5
var_declare          : 3

Parsing method: LALR

state 0

    (0) S' -> . parse
    (1) parse -> . comparative
    (2) parse -> . sentence
    (3) parse -> . var_declare
    (4) parse -> . empty
    (40) comparative -> . IDEN condition expression
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (36) var_declare -> . DCL IDEN value
    (55) empty -> .
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 6
    DCL             shift and go to state 12
    $end            reduce using rule 55 (empty -> .)
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    parse                          shift and go to state 1
    comparative                    shift and go to state 2
    sentence                       shift and go to state 3
    var_declare                    shift and go to state 4
    empty                          shift and go to state 5
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 1

    (0) S' -> parse .



state 2

    (1) parse -> comparative .

    $end            reduce using rule 1 (parse -> comparative .)


state 3

    (2) parse -> sentence .

    $end            reduce using rule 2 (parse -> sentence .)


state 4

    (3) parse -> var_declare .

    $end            reduce using rule 3 (parse -> var_declare .)


state 5

    (4) parse -> empty .

    $end            reduce using rule 4 (parse -> empty .)


state 6

    (40) comparative -> IDEN . condition expression
    (41) var_assign -> IDEN . EQUALS expression
    (49) condition -> . SAME
    (50) condition -> . LESS
    (51) condition -> . MORE
    (52) condition -> . NON_EQUAL
    (53) condition -> . LESS_EQUAL
    (54) condition -> . MORE_EQUAL

    EQUALS          shift and go to state 28
    SAME            shift and go to state 29
    LESS            shift and go to state 30
    MORE            shift and go to state 31
    NON_EQUAL       shift and go to state 32
    LESS_EQUAL      shift and go to state 33
    MORE_EQUAL      shift and go to state 34

    condition                      shift and go to state 27

state 7

    (5) sentence -> var_assign .

    $end            reduce using rule 5 (sentence -> var_assign .)
    SEPARATOR       reduce using rule 5 (sentence -> var_assign .)
    MIENTRAS        reduce using rule 5 (sentence -> var_assign .)
    RBRACE          reduce using rule 5 (sentence -> var_assign .)
    FINDESDE        reduce using rule 5 (sentence -> var_assign .)


state 8

    (6) sentence -> cases .

    $end            reduce using rule 6 (sentence -> cases .)
    SEPARATOR       reduce using rule 6 (sentence -> cases .)
    MIENTRAS        reduce using rule 6 (sentence -> cases .)
    RBRACE          reduce using rule 6 (sentence -> cases .)
    FINDESDE        reduce using rule 6 (sentence -> cases .)


state 9

    (7) sentence -> repeat .

    $end            reduce using rule 7 (sentence -> repeat .)
    SEPARATOR       reduce using rule 7 (sentence -> repeat .)
    MIENTRAS        reduce using rule 7 (sentence -> repeat .)
    RBRACE          reduce using rule 7 (sentence -> repeat .)
    FINDESDE        reduce using rule 7 (sentence -> repeat .)


state 10

    (8) sentence -> do .

    $end            reduce using rule 8 (sentence -> do .)
    SEPARATOR       reduce using rule 8 (sentence -> do .)
    MIENTRAS        reduce using rule 8 (sentence -> do .)
    RBRACE          reduce using rule 8 (sentence -> do .)
    FINDESDE        reduce using rule 8 (sentence -> do .)


state 11

    (9) sentence -> function .

    $end            reduce using rule 9 (sentence -> function .)
    SEPARATOR       reduce using rule 9 (sentence -> function .)
    MIENTRAS        reduce using rule 9 (sentence -> function .)
    RBRACE          reduce using rule 9 (sentence -> function .)
    FINDESDE        reduce using rule 9 (sentence -> function .)


state 12

    (36) var_declare -> DCL . IDEN value

    IDEN            shift and go to state 35


state 13

    (21) cases -> syntax1 .

    $end            reduce using rule 21 (cases -> syntax1 .)
    SEPARATOR       reduce using rule 21 (cases -> syntax1 .)
    MIENTRAS        reduce using rule 21 (cases -> syntax1 .)
    RBRACE          reduce using rule 21 (cases -> syntax1 .)
    FINDESDE        reduce using rule 21 (cases -> syntax1 .)


state 14

    (22) cases -> syntax2 .

    $end            reduce using rule 22 (cases -> syntax2 .)
    SEPARATOR       reduce using rule 22 (cases -> syntax2 .)
    MIENTRAS        reduce using rule 22 (cases -> syntax2 .)
    RBRACE          reduce using rule 22 (cases -> syntax2 .)
    FINDESDE        reduce using rule 22 (cases -> syntax2 .)


state 15

    (20) repeat -> REPITA . actions MIENTRAS comparative
    (31) actions -> . sentence more_actions
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    actions                        shift and go to state 36
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 16

    (19) do -> DESDE . IDEN EQUALS expression HASTA expression HAGA actions FINDESDE

    IDEN            shift and go to state 39


state 17

    (10) function -> moves .

    $end            reduce using rule 10 (function -> moves .)
    SEPARATOR       reduce using rule 10 (function -> moves .)
    MIENTRAS        reduce using rule 10 (function -> moves .)
    RBRACE          reduce using rule 10 (function -> moves .)
    FINDESDE        reduce using rule 10 (function -> moves .)


state 18

    (11) function -> random .

    $end            reduce using rule 11 (function -> random .)
    SEPARATOR       reduce using rule 11 (function -> random .)
    MIENTRAS        reduce using rule 11 (function -> random .)
    RBRACE          reduce using rule 11 (function -> random .)
    FINDESDE        reduce using rule 11 (function -> random .)


state 19

    (12) function -> changes .

    $end            reduce using rule 12 (function -> changes .)
    SEPARATOR       reduce using rule 12 (function -> changes .)
    MIENTRAS        reduce using rule 12 (function -> changes .)
    RBRACE          reduce using rule 12 (function -> changes .)
    FINDESDE        reduce using rule 12 (function -> changes .)


state 20

    (27) syntax1 -> ENCASO . options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> ENCASO . IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (28) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1

    IDEN            shift and go to state 41
    CUANDO          shift and go to state 42

    options1                       shift and go to state 40

state 21

    (15) moves -> moves_aux . LPAR IDEN COMMA INT RPAR

    LPAR            shift and go to state 43


state 22

    (14) random -> ALEATORIO . LPAR RPAR

    LPAR            shift and go to state 44


state 23

    (13) changes -> MOVER . LPAR IDEN RPAR

    LPAR            shift and go to state 45


state 24

    (16) moves_aux -> INC .

    LPAR            reduce using rule 16 (moves_aux -> INC .)


state 25

    (17) moves_aux -> DEC .

    LPAR            reduce using rule 17 (moves_aux -> DEC .)


state 26

    (18) moves_aux -> INI .

    LPAR            reduce using rule 18 (moves_aux -> INI .)


state 27

    (40) comparative -> IDEN condition . expression
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 47

state 28

    (41) var_assign -> IDEN EQUALS . expression
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 49

state 29

    (49) condition -> SAME .

    IDEN            reduce using rule 49 (condition -> SAME .)
    INT             reduce using rule 49 (condition -> SAME .)


state 30

    (50) condition -> LESS .

    IDEN            reduce using rule 50 (condition -> LESS .)
    INT             reduce using rule 50 (condition -> LESS .)


state 31

    (51) condition -> MORE .

    IDEN            reduce using rule 51 (condition -> MORE .)
    INT             reduce using rule 51 (condition -> MORE .)


state 32

    (52) condition -> NON_EQUAL .

    IDEN            reduce using rule 52 (condition -> NON_EQUAL .)
    INT             reduce using rule 52 (condition -> NON_EQUAL .)


state 33

    (53) condition -> LESS_EQUAL .

    IDEN            reduce using rule 53 (condition -> LESS_EQUAL .)
    INT             reduce using rule 53 (condition -> LESS_EQUAL .)


state 34

    (54) condition -> MORE_EQUAL .

    IDEN            reduce using rule 54 (condition -> MORE_EQUAL .)
    INT             reduce using rule 54 (condition -> MORE_EQUAL .)


state 35

    (36) var_declare -> DCL IDEN . value
    (37) value -> . initialize
    (38) value -> . empty
    (39) initialize -> . ASSIGN expression
    (55) empty -> .

    ASSIGN          shift and go to state 53
    $end            reduce using rule 55 (empty -> .)

    value                          shift and go to state 50
    initialize                     shift and go to state 51
    empty                          shift and go to state 52

state 36

    (20) repeat -> REPITA actions . MIENTRAS comparative

    MIENTRAS        shift and go to state 54


state 37

    (31) actions -> sentence . more_actions
    (32) more_actions -> . SEPARATOR more_actions_aux
    (33) more_actions -> . empty
    (55) empty -> .

    SEPARATOR       shift and go to state 56
    MIENTRAS        reduce using rule 55 (empty -> .)
    RBRACE          reduce using rule 55 (empty -> .)
    FINDESDE        reduce using rule 55 (empty -> .)

    more_actions                   shift and go to state 55
    empty                          shift and go to state 57

state 38

    (41) var_assign -> IDEN . EQUALS expression

    EQUALS          shift and go to state 28


state 39

    (19) do -> DESDE IDEN . EQUALS expression HASTA expression HAGA actions FINDESDE

    EQUALS          shift and go to state 58


state 40

    (27) syntax1 -> ENCASO options1 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 59


state 41

    (23) syntax2 -> ENCASO IDEN . options2 SINO LBRACE actions RBRACE FINCASO
    (24) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2

    CUANDO          shift and go to state 61

    options2                       shift and go to state 60

state 42

    (28) options1 -> CUANDO . comparative ENTONS LBRACE actions RBRACE more_options1
    (40) comparative -> . IDEN condition expression

    IDEN            shift and go to state 63

    comparative                    shift and go to state 62

state 43

    (15) moves -> moves_aux LPAR . IDEN COMMA INT RPAR

    IDEN            shift and go to state 64


state 44

    (14) random -> ALEATORIO LPAR . RPAR

    RPAR            shift and go to state 65


state 45

    (13) changes -> MOVER LPAR . IDEN RPAR

    IDEN            shift and go to state 66


state 46

    (43) expression -> IDEN .

    MULTIPLY        reduce using rule 43 (expression -> IDEN .)
    DIVIDE          reduce using rule 43 (expression -> IDEN .)
    PLUS            reduce using rule 43 (expression -> IDEN .)
    MINUS           reduce using rule 43 (expression -> IDEN .)
    $end            reduce using rule 43 (expression -> IDEN .)
    ENTONS          reduce using rule 43 (expression -> IDEN .)
    SEPARATOR       reduce using rule 43 (expression -> IDEN .)
    MIENTRAS        reduce using rule 43 (expression -> IDEN .)
    RBRACE          reduce using rule 43 (expression -> IDEN .)
    FINDESDE        reduce using rule 43 (expression -> IDEN .)
    HASTA           reduce using rule 43 (expression -> IDEN .)
    HAGA            reduce using rule 43 (expression -> IDEN .)


state 47

    (40) comparative -> IDEN condition expression .
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

    $end            reduce using rule 40 (comparative -> IDEN condition expression .)
    ENTONS          reduce using rule 40 (comparative -> IDEN condition expression .)
    SEPARATOR       reduce using rule 40 (comparative -> IDEN condition expression .)
    MIENTRAS        reduce using rule 40 (comparative -> IDEN condition expression .)
    RBRACE          reduce using rule 40 (comparative -> IDEN condition expression .)
    FINDESDE        reduce using rule 40 (comparative -> IDEN condition expression .)
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    operator                       shift and go to state 67

state 48

    (44) expression -> INT .

    MULTIPLY        reduce using rule 44 (expression -> INT .)
    DIVIDE          reduce using rule 44 (expression -> INT .)
    PLUS            reduce using rule 44 (expression -> INT .)
    MINUS           reduce using rule 44 (expression -> INT .)
    $end            reduce using rule 44 (expression -> INT .)
    ENTONS          reduce using rule 44 (expression -> INT .)
    SEPARATOR       reduce using rule 44 (expression -> INT .)
    MIENTRAS        reduce using rule 44 (expression -> INT .)
    RBRACE          reduce using rule 44 (expression -> INT .)
    FINDESDE        reduce using rule 44 (expression -> INT .)
    HASTA           reduce using rule 44 (expression -> INT .)
    HAGA            reduce using rule 44 (expression -> INT .)


state 49

    (41) var_assign -> IDEN EQUALS expression .
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

    $end            reduce using rule 41 (var_assign -> IDEN EQUALS expression .)
    SEPARATOR       reduce using rule 41 (var_assign -> IDEN EQUALS expression .)
    MIENTRAS        reduce using rule 41 (var_assign -> IDEN EQUALS expression .)
    RBRACE          reduce using rule 41 (var_assign -> IDEN EQUALS expression .)
    FINDESDE        reduce using rule 41 (var_assign -> IDEN EQUALS expression .)
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    operator                       shift and go to state 67

state 50

    (36) var_declare -> DCL IDEN value .

    $end            reduce using rule 36 (var_declare -> DCL IDEN value .)


state 51

    (37) value -> initialize .

    $end            reduce using rule 37 (value -> initialize .)


state 52

    (38) value -> empty .

    $end            reduce using rule 38 (value -> empty .)


state 53

    (39) initialize -> ASSIGN . expression
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 72

state 54

    (20) repeat -> REPITA actions MIENTRAS . comparative
    (40) comparative -> . IDEN condition expression

    IDEN            shift and go to state 63

    comparative                    shift and go to state 73

state 55

    (31) actions -> sentence more_actions .

    MIENTRAS        reduce using rule 31 (actions -> sentence more_actions .)
    RBRACE          reduce using rule 31 (actions -> sentence more_actions .)
    FINDESDE        reduce using rule 31 (actions -> sentence more_actions .)


state 56

    (32) more_actions -> SEPARATOR . more_actions_aux
    (34) more_actions_aux -> . actions
    (35) more_actions_aux -> . empty
    (31) actions -> . sentence more_actions
    (55) empty -> .
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    MIENTRAS        reduce using rule 55 (empty -> .)
    RBRACE          reduce using rule 55 (empty -> .)
    FINDESDE        reduce using rule 55 (empty -> .)
    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    more_actions_aux               shift and go to state 74
    actions                        shift and go to state 75
    empty                          shift and go to state 76
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 57

    (33) more_actions -> empty .

    MIENTRAS        reduce using rule 33 (more_actions -> empty .)
    RBRACE          reduce using rule 33 (more_actions -> empty .)
    FINDESDE        reduce using rule 33 (more_actions -> empty .)


state 58

    (19) do -> DESDE IDEN EQUALS . expression HASTA expression HAGA actions FINDESDE
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 77

state 59

    (27) syntax1 -> ENCASO options1 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 78


state 60

    (23) syntax2 -> ENCASO IDEN options2 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 79


state 61

    (24) options2 -> CUANDO . condition expression ENTONS LBRACE actions RBRACE more_options2
    (49) condition -> . SAME
    (50) condition -> . LESS
    (51) condition -> . MORE
    (52) condition -> . NON_EQUAL
    (53) condition -> . LESS_EQUAL
    (54) condition -> . MORE_EQUAL

    SAME            shift and go to state 29
    LESS            shift and go to state 30
    MORE            shift and go to state 31
    NON_EQUAL       shift and go to state 32
    LESS_EQUAL      shift and go to state 33
    MORE_EQUAL      shift and go to state 34

    condition                      shift and go to state 80

state 62

    (28) options1 -> CUANDO comparative . ENTONS LBRACE actions RBRACE more_options1

    ENTONS          shift and go to state 81


state 63

    (40) comparative -> IDEN . condition expression
    (49) condition -> . SAME
    (50) condition -> . LESS
    (51) condition -> . MORE
    (52) condition -> . NON_EQUAL
    (53) condition -> . LESS_EQUAL
    (54) condition -> . MORE_EQUAL

    SAME            shift and go to state 29
    LESS            shift and go to state 30
    MORE            shift and go to state 31
    NON_EQUAL       shift and go to state 32
    LESS_EQUAL      shift and go to state 33
    MORE_EQUAL      shift and go to state 34

    condition                      shift and go to state 27

state 64

    (15) moves -> moves_aux LPAR IDEN . COMMA INT RPAR

    COMMA           shift and go to state 82


state 65

    (14) random -> ALEATORIO LPAR RPAR .

    $end            reduce using rule 14 (random -> ALEATORIO LPAR RPAR .)
    SEPARATOR       reduce using rule 14 (random -> ALEATORIO LPAR RPAR .)
    MIENTRAS        reduce using rule 14 (random -> ALEATORIO LPAR RPAR .)
    RBRACE          reduce using rule 14 (random -> ALEATORIO LPAR RPAR .)
    FINDESDE        reduce using rule 14 (random -> ALEATORIO LPAR RPAR .)


state 66

    (13) changes -> MOVER LPAR IDEN . RPAR

    RPAR            shift and go to state 83


state 67

    (42) expression -> expression operator . expression
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 84

state 68

    (45) operator -> MULTIPLY .

    IDEN            reduce using rule 45 (operator -> MULTIPLY .)
    INT             reduce using rule 45 (operator -> MULTIPLY .)


state 69

    (46) operator -> DIVIDE .

    IDEN            reduce using rule 46 (operator -> DIVIDE .)
    INT             reduce using rule 46 (operator -> DIVIDE .)


state 70

    (47) operator -> PLUS .

    IDEN            reduce using rule 47 (operator -> PLUS .)
    INT             reduce using rule 47 (operator -> PLUS .)


state 71

    (48) operator -> MINUS .

    IDEN            reduce using rule 48 (operator -> MINUS .)
    INT             reduce using rule 48 (operator -> MINUS .)


state 72

    (39) initialize -> ASSIGN expression .
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

    $end            reduce using rule 39 (initialize -> ASSIGN expression .)
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    operator                       shift and go to state 67

state 73

    (20) repeat -> REPITA actions MIENTRAS comparative .

    $end            reduce using rule 20 (repeat -> REPITA actions MIENTRAS comparative .)
    SEPARATOR       reduce using rule 20 (repeat -> REPITA actions MIENTRAS comparative .)
    MIENTRAS        reduce using rule 20 (repeat -> REPITA actions MIENTRAS comparative .)
    RBRACE          reduce using rule 20 (repeat -> REPITA actions MIENTRAS comparative .)
    FINDESDE        reduce using rule 20 (repeat -> REPITA actions MIENTRAS comparative .)


state 74

    (32) more_actions -> SEPARATOR more_actions_aux .

    MIENTRAS        reduce using rule 32 (more_actions -> SEPARATOR more_actions_aux .)
    RBRACE          reduce using rule 32 (more_actions -> SEPARATOR more_actions_aux .)
    FINDESDE        reduce using rule 32 (more_actions -> SEPARATOR more_actions_aux .)


state 75

    (34) more_actions_aux -> actions .

    MIENTRAS        reduce using rule 34 (more_actions_aux -> actions .)
    RBRACE          reduce using rule 34 (more_actions_aux -> actions .)
    FINDESDE        reduce using rule 34 (more_actions_aux -> actions .)


state 76

    (35) more_actions_aux -> empty .

    MIENTRAS        reduce using rule 35 (more_actions_aux -> empty .)
    RBRACE          reduce using rule 35 (more_actions_aux -> empty .)
    FINDESDE        reduce using rule 35 (more_actions_aux -> empty .)


state 77

    (19) do -> DESDE IDEN EQUALS expression . HASTA expression HAGA actions FINDESDE
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

    HASTA           shift and go to state 85
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    operator                       shift and go to state 67

state 78

    (27) syntax1 -> ENCASO options1 SINO LBRACE . actions RBRACE FINCASO
    (31) actions -> . sentence more_actions
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    actions                        shift and go to state 86
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 79

    (23) syntax2 -> ENCASO IDEN options2 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 87


state 80

    (24) options2 -> CUANDO condition . expression ENTONS LBRACE actions RBRACE more_options2
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 88

state 81

    (28) options1 -> CUANDO comparative ENTONS . LBRACE actions RBRACE more_options1

    LBRACE          shift and go to state 89


state 82

    (15) moves -> moves_aux LPAR IDEN COMMA . INT RPAR

    INT             shift and go to state 90


state 83

    (13) changes -> MOVER LPAR IDEN RPAR .

    $end            reduce using rule 13 (changes -> MOVER LPAR IDEN RPAR .)
    SEPARATOR       reduce using rule 13 (changes -> MOVER LPAR IDEN RPAR .)
    MIENTRAS        reduce using rule 13 (changes -> MOVER LPAR IDEN RPAR .)
    RBRACE          reduce using rule 13 (changes -> MOVER LPAR IDEN RPAR .)
    FINDESDE        reduce using rule 13 (changes -> MOVER LPAR IDEN RPAR .)


state 84

    (42) expression -> expression operator expression .
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 42 (expression -> expression operator expression .)
    ENTONS          reduce using rule 42 (expression -> expression operator expression .)
    SEPARATOR       reduce using rule 42 (expression -> expression operator expression .)
    MIENTRAS        reduce using rule 42 (expression -> expression operator expression .)
    RBRACE          reduce using rule 42 (expression -> expression operator expression .)
    FINDESDE        reduce using rule 42 (expression -> expression operator expression .)
    HASTA           reduce using rule 42 (expression -> expression operator expression .)
    HAGA            reduce using rule 42 (expression -> expression operator expression .)
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

  ! MULTIPLY        [ reduce using rule 42 (expression -> expression operator expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression operator expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression operator expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression operator expression .) ]

    operator                       shift and go to state 67

state 85

    (19) do -> DESDE IDEN EQUALS expression HASTA . expression HAGA actions FINDESDE
    (42) expression -> . expression operator expression
    (43) expression -> . IDEN
    (44) expression -> . INT

    IDEN            shift and go to state 46
    INT             shift and go to state 48

    expression                     shift and go to state 91

state 86

    (27) syntax1 -> ENCASO options1 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 92


state 87

    (23) syntax2 -> ENCASO IDEN options2 SINO LBRACE . actions RBRACE FINCASO
    (31) actions -> . sentence more_actions
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    actions                        shift and go to state 93
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 88

    (24) options2 -> CUANDO condition expression . ENTONS LBRACE actions RBRACE more_options2
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

    ENTONS          shift and go to state 94
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    operator                       shift and go to state 67

state 89

    (28) options1 -> CUANDO comparative ENTONS LBRACE . actions RBRACE more_options1
    (31) actions -> . sentence more_actions
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    actions                        shift and go to state 95
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 90

    (15) moves -> moves_aux LPAR IDEN COMMA INT . RPAR

    RPAR            shift and go to state 96


state 91

    (19) do -> DESDE IDEN EQUALS expression HASTA expression . HAGA actions FINDESDE
    (42) expression -> expression . operator expression
    (45) operator -> . MULTIPLY
    (46) operator -> . DIVIDE
    (47) operator -> . PLUS
    (48) operator -> . MINUS

    HAGA            shift and go to state 97
    MULTIPLY        shift and go to state 68
    DIVIDE          shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    operator                       shift and go to state 67

state 92

    (27) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 98


state 93

    (23) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 99


state 94

    (24) options2 -> CUANDO condition expression ENTONS . LBRACE actions RBRACE more_options2

    LBRACE          shift and go to state 100


state 95

    (28) options1 -> CUANDO comparative ENTONS LBRACE actions . RBRACE more_options1

    RBRACE          shift and go to state 101


state 96

    (15) moves -> moves_aux LPAR IDEN COMMA INT RPAR .

    $end            reduce using rule 15 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    SEPARATOR       reduce using rule 15 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    MIENTRAS        reduce using rule 15 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    RBRACE          reduce using rule 15 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    FINDESDE        reduce using rule 15 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)


state 97

    (19) do -> DESDE IDEN EQUALS expression HASTA expression HAGA . actions FINDESDE
    (31) actions -> . sentence more_actions
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    actions                        shift and go to state 102
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 98

    (27) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 27 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    SEPARATOR       reduce using rule 27 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    MIENTRAS        reduce using rule 27 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    RBRACE          reduce using rule 27 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    FINDESDE        reduce using rule 27 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)


state 99

    (23) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 103


state 100

    (24) options2 -> CUANDO condition expression ENTONS LBRACE . actions RBRACE more_options2
    (31) actions -> . sentence more_actions
    (5) sentence -> . var_assign
    (6) sentence -> . cases
    (7) sentence -> . repeat
    (8) sentence -> . do
    (9) sentence -> . function
    (41) var_assign -> . IDEN EQUALS expression
    (21) cases -> . syntax1
    (22) cases -> . syntax2
    (20) repeat -> . REPITA actions MIENTRAS comparative
    (19) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (10) function -> . moves
    (11) function -> . random
    (12) function -> . changes
    (27) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (23) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (15) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (14) random -> . ALEATORIO LPAR RPAR
    (13) changes -> . MOVER LPAR IDEN RPAR
    (16) moves_aux -> . INC
    (17) moves_aux -> . DEC
    (18) moves_aux -> . INI

    IDEN            shift and go to state 38
    REPITA          shift and go to state 15
    DESDE           shift and go to state 16
    ENCASO          shift and go to state 20
    ALEATORIO       shift and go to state 22
    MOVER           shift and go to state 23
    INC             shift and go to state 24
    DEC             shift and go to state 25
    INI             shift and go to state 26

    actions                        shift and go to state 104
    sentence                       shift and go to state 37
    var_assign                     shift and go to state 7
    cases                          shift and go to state 8
    repeat                         shift and go to state 9
    do                             shift and go to state 10
    function                       shift and go to state 11
    syntax1                        shift and go to state 13
    syntax2                        shift and go to state 14
    moves                          shift and go to state 17
    random                         shift and go to state 18
    changes                        shift and go to state 19
    moves_aux                      shift and go to state 21

state 101

    (28) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE . more_options1
    (29) more_options1 -> . options1
    (30) more_options1 -> . empty
    (28) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
    (55) empty -> .

    CUANDO          shift and go to state 42
    SINO            reduce using rule 55 (empty -> .)

    more_options1                  shift and go to state 105
    options1                       shift and go to state 106
    empty                          shift and go to state 107

state 102

    (19) do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions . FINDESDE

    FINDESDE        shift and go to state 108


state 103

    (23) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 23 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    SEPARATOR       reduce using rule 23 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    MIENTRAS        reduce using rule 23 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    RBRACE          reduce using rule 23 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    FINDESDE        reduce using rule 23 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)


state 104

    (24) options2 -> CUANDO condition expression ENTONS LBRACE actions . RBRACE more_options2

    RBRACE          shift and go to state 109


state 105

    (28) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .

    SINO            reduce using rule 28 (options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .)


state 106

    (29) more_options1 -> options1 .

    SINO            reduce using rule 29 (more_options1 -> options1 .)


state 107

    (30) more_options1 -> empty .

    SINO            reduce using rule 30 (more_options1 -> empty .)


state 108

    (19) do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .

    $end            reduce using rule 19 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    SEPARATOR       reduce using rule 19 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    MIENTRAS        reduce using rule 19 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    RBRACE          reduce using rule 19 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    FINDESDE        reduce using rule 19 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)


state 109

    (24) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE . more_options2
    (25) more_options2 -> . options2
    (26) more_options2 -> . empty
    (24) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
    (55) empty -> .

    CUANDO          shift and go to state 61
    SINO            reduce using rule 55 (empty -> .)

    more_options2                  shift and go to state 110
    options2                       shift and go to state 111
    empty                          shift and go to state 112

state 110

    (24) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .

    SINO            reduce using rule 24 (options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .)


state 111

    (25) more_options2 -> options2 .

    SINO            reduce using rule 25 (more_options2 -> options2 .)


state 112

    (26) more_options2 -> empty .

    SINO            reduce using rule 26 (more_options2 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
