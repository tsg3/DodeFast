Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> parse
Rule 1     parse -> comparative
Rule 2     parse -> sentence
Rule 3     parse -> var_declare
Rule 4     parse -> proc
Rule 5     parse -> IDEN
Rule 6     parse -> empty
Rule 7     proc -> LLAMAR IDEN LPAR params RPAR
Rule 8     params -> expression more_params
Rule 9     more_params -> COMMA params
Rule 10    more_params -> empty
Rule 11    sentence -> var_assign
Rule 12    sentence -> cases
Rule 13    sentence -> repeat
Rule 14    sentence -> do
Rule 15    sentence -> function
Rule 16    function -> moves
Rule 17    function -> random
Rule 18    function -> changes
Rule 19    changes -> MOVER LPAR IDEN RPAR
Rule 20    random -> ALEATORIO LPAR RPAR
Rule 21    moves -> moves_aux LPAR IDEN COMMA INT RPAR
Rule 22    moves_aux -> INC
Rule 23    moves_aux -> DEC
Rule 24    moves_aux -> INI
Rule 25    do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
Rule 26    repeat -> REPITA actions MIENTRAS comparative
Rule 27    cases -> syntax1
Rule 28    cases -> syntax2
Rule 29    syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
Rule 30    options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
Rule 31    more_options2 -> options2
Rule 32    more_options2 -> empty
Rule 33    syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO
Rule 34    options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
Rule 35    more_options1 -> options1
Rule 36    more_options1 -> empty
Rule 37    actions -> sentence more_actions
Rule 38    more_actions -> SEPARATOR more_actions_aux
Rule 39    more_actions -> empty
Rule 40    more_actions_aux -> actions
Rule 41    more_actions_aux -> empty
Rule 42    var_declare -> DCL IDEN value
Rule 43    value -> initialize
Rule 44    value -> empty
Rule 45    initialize -> ASSIGN expression
Rule 46    comparative -> IDEN condition expression
Rule 47    var_assign -> IDEN EQUALS expression
Rule 48    expression -> expression operator expression
Rule 49    expression -> IDEN
Rule 50    expression -> INT
Rule 51    operator -> MULTIPLY
Rule 52    operator -> DIVIDE
Rule 53    operator -> PLUS
Rule 54    operator -> MINUS
Rule 55    condition -> SAME
Rule 56    condition -> LESS
Rule 57    condition -> MORE
Rule 58    condition -> NON_EQUAL
Rule 59    condition -> LESS_EQUAL
Rule 60    condition -> MORE_EQUAL
Rule 61    empty -> <empty>

Terminals, with rules where they appear

ALEATORIO            : 20
ASSIGN               : 45
COMMA                : 9 21
CUANDO               : 30 34
DCL                  : 42
DEC                  : 23
DESDE                : 25
DIVIDE               : 52
ENCASO               : 29 33
ENTONS               : 30 34
EQUALS               : 25 47
FINCASO              : 29 33
FINDESDE             : 25
HAGA                 : 25
HASTA                : 25
IDEN                 : 5 7 19 21 25 29 42 46 47 49
INC                  : 22
INI                  : 24
INT                  : 21 50
LBRACE               : 29 30 33 34
LESS                 : 56
LESS_EQUAL           : 59
LLAMAR               : 7
LPAR                 : 7 19 20 21
MIENTRAS             : 26
MINUS                : 54
MORE                 : 57
MORE_EQUAL           : 60
MOVER                : 19
MULTIPLY             : 51
NON_EQUAL            : 58
PLUS                 : 53
RBRACE               : 29 30 33 34
REPITA               : 26
RPAR                 : 7 19 20 21
SAME                 : 55
SEPARATOR            : 38
SINO                 : 29 33
error                : 

Nonterminals, with rules where they appear

actions              : 25 26 29 30 33 34 40
cases                : 12
changes              : 18
comparative          : 1 26 34
condition            : 30 46
do                   : 14
empty                : 6 10 32 36 39 41 44
expression           : 8 25 25 30 45 46 47 48 48
function             : 15
initialize           : 43
more_actions         : 37
more_actions_aux     : 38
more_options1        : 34
more_options2        : 30
more_params          : 8
moves                : 16
moves_aux            : 21
operator             : 48
options1             : 33 35
options2             : 29 31
params               : 7 9
parse                : 0
proc                 : 4
random               : 17
repeat               : 13
sentence             : 2 37
syntax1              : 27
syntax2              : 28
value                : 42
var_assign           : 11
var_declare          : 3

Parsing method: LALR

state 0

    (0) S' -> . parse
    (1) parse -> . comparative
    (2) parse -> . sentence
    (3) parse -> . var_declare
    (4) parse -> . proc
    (5) parse -> . IDEN
    (6) parse -> . empty
    (46) comparative -> . IDEN condition expression
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (42) var_declare -> . DCL IDEN value
    (7) proc -> . LLAMAR IDEN LPAR params RPAR
    (61) empty -> .
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 6
    DCL             shift and go to state 13
    LLAMAR          shift and go to state 14
    $end            reduce using rule 61 (empty -> .)
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    parse                          shift and go to state 1
    comparative                    shift and go to state 2
    sentence                       shift and go to state 3
    var_declare                    shift and go to state 4
    proc                           shift and go to state 5
    empty                          shift and go to state 7
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 1

    (0) S' -> parse .



state 2

    (1) parse -> comparative .

    $end            reduce using rule 1 (parse -> comparative .)


state 3

    (2) parse -> sentence .

    $end            reduce using rule 2 (parse -> sentence .)


state 4

    (3) parse -> var_declare .

    $end            reduce using rule 3 (parse -> var_declare .)


state 5

    (4) parse -> proc .

    $end            reduce using rule 4 (parse -> proc .)


state 6

    (5) parse -> IDEN .
    (46) comparative -> IDEN . condition expression
    (47) var_assign -> IDEN . EQUALS expression
    (55) condition -> . SAME
    (56) condition -> . LESS
    (57) condition -> . MORE
    (58) condition -> . NON_EQUAL
    (59) condition -> . LESS_EQUAL
    (60) condition -> . MORE_EQUAL

    $end            reduce using rule 5 (parse -> IDEN .)
    EQUALS          shift and go to state 30
    SAME            shift and go to state 31
    LESS            shift and go to state 32
    MORE            shift and go to state 33
    NON_EQUAL       shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    MORE_EQUAL      shift and go to state 36

    condition                      shift and go to state 29

state 7

    (6) parse -> empty .

    $end            reduce using rule 6 (parse -> empty .)


state 8

    (11) sentence -> var_assign .

    $end            reduce using rule 11 (sentence -> var_assign .)
    SEPARATOR       reduce using rule 11 (sentence -> var_assign .)
    MIENTRAS        reduce using rule 11 (sentence -> var_assign .)
    RBRACE          reduce using rule 11 (sentence -> var_assign .)
    FINDESDE        reduce using rule 11 (sentence -> var_assign .)


state 9

    (12) sentence -> cases .

    $end            reduce using rule 12 (sentence -> cases .)
    SEPARATOR       reduce using rule 12 (sentence -> cases .)
    MIENTRAS        reduce using rule 12 (sentence -> cases .)
    RBRACE          reduce using rule 12 (sentence -> cases .)
    FINDESDE        reduce using rule 12 (sentence -> cases .)


state 10

    (13) sentence -> repeat .

    $end            reduce using rule 13 (sentence -> repeat .)
    SEPARATOR       reduce using rule 13 (sentence -> repeat .)
    MIENTRAS        reduce using rule 13 (sentence -> repeat .)
    RBRACE          reduce using rule 13 (sentence -> repeat .)
    FINDESDE        reduce using rule 13 (sentence -> repeat .)


state 11

    (14) sentence -> do .

    $end            reduce using rule 14 (sentence -> do .)
    SEPARATOR       reduce using rule 14 (sentence -> do .)
    MIENTRAS        reduce using rule 14 (sentence -> do .)
    RBRACE          reduce using rule 14 (sentence -> do .)
    FINDESDE        reduce using rule 14 (sentence -> do .)


state 12

    (15) sentence -> function .

    $end            reduce using rule 15 (sentence -> function .)
    SEPARATOR       reduce using rule 15 (sentence -> function .)
    MIENTRAS        reduce using rule 15 (sentence -> function .)
    RBRACE          reduce using rule 15 (sentence -> function .)
    FINDESDE        reduce using rule 15 (sentence -> function .)


state 13

    (42) var_declare -> DCL . IDEN value

    IDEN            shift and go to state 37


state 14

    (7) proc -> LLAMAR . IDEN LPAR params RPAR

    IDEN            shift and go to state 38


state 15

    (27) cases -> syntax1 .

    $end            reduce using rule 27 (cases -> syntax1 .)
    SEPARATOR       reduce using rule 27 (cases -> syntax1 .)
    MIENTRAS        reduce using rule 27 (cases -> syntax1 .)
    RBRACE          reduce using rule 27 (cases -> syntax1 .)
    FINDESDE        reduce using rule 27 (cases -> syntax1 .)


state 16

    (28) cases -> syntax2 .

    $end            reduce using rule 28 (cases -> syntax2 .)
    SEPARATOR       reduce using rule 28 (cases -> syntax2 .)
    MIENTRAS        reduce using rule 28 (cases -> syntax2 .)
    RBRACE          reduce using rule 28 (cases -> syntax2 .)
    FINDESDE        reduce using rule 28 (cases -> syntax2 .)


state 17

    (26) repeat -> REPITA . actions MIENTRAS comparative
    (37) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 39
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 18

    (25) do -> DESDE . IDEN EQUALS expression HASTA expression HAGA actions FINDESDE

    IDEN            shift and go to state 42


state 19

    (16) function -> moves .

    $end            reduce using rule 16 (function -> moves .)
    SEPARATOR       reduce using rule 16 (function -> moves .)
    MIENTRAS        reduce using rule 16 (function -> moves .)
    RBRACE          reduce using rule 16 (function -> moves .)
    FINDESDE        reduce using rule 16 (function -> moves .)


state 20

    (17) function -> random .

    $end            reduce using rule 17 (function -> random .)
    SEPARATOR       reduce using rule 17 (function -> random .)
    MIENTRAS        reduce using rule 17 (function -> random .)
    RBRACE          reduce using rule 17 (function -> random .)
    FINDESDE        reduce using rule 17 (function -> random .)


state 21

    (18) function -> changes .

    $end            reduce using rule 18 (function -> changes .)
    SEPARATOR       reduce using rule 18 (function -> changes .)
    MIENTRAS        reduce using rule 18 (function -> changes .)
    RBRACE          reduce using rule 18 (function -> changes .)
    FINDESDE        reduce using rule 18 (function -> changes .)


state 22

    (33) syntax1 -> ENCASO . options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> ENCASO . IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (34) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1

    IDEN            shift and go to state 44
    CUANDO          shift and go to state 45

    options1                       shift and go to state 43

state 23

    (21) moves -> moves_aux . LPAR IDEN COMMA INT RPAR

    LPAR            shift and go to state 46


state 24

    (20) random -> ALEATORIO . LPAR RPAR

    LPAR            shift and go to state 47


state 25

    (19) changes -> MOVER . LPAR IDEN RPAR

    LPAR            shift and go to state 48


state 26

    (22) moves_aux -> INC .

    LPAR            reduce using rule 22 (moves_aux -> INC .)


state 27

    (23) moves_aux -> DEC .

    LPAR            reduce using rule 23 (moves_aux -> DEC .)


state 28

    (24) moves_aux -> INI .

    LPAR            reduce using rule 24 (moves_aux -> INI .)


state 29

    (46) comparative -> IDEN condition . expression
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 50

state 30

    (47) var_assign -> IDEN EQUALS . expression
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 52

state 31

    (55) condition -> SAME .

    IDEN            reduce using rule 55 (condition -> SAME .)
    INT             reduce using rule 55 (condition -> SAME .)


state 32

    (56) condition -> LESS .

    IDEN            reduce using rule 56 (condition -> LESS .)
    INT             reduce using rule 56 (condition -> LESS .)


state 33

    (57) condition -> MORE .

    IDEN            reduce using rule 57 (condition -> MORE .)
    INT             reduce using rule 57 (condition -> MORE .)


state 34

    (58) condition -> NON_EQUAL .

    IDEN            reduce using rule 58 (condition -> NON_EQUAL .)
    INT             reduce using rule 58 (condition -> NON_EQUAL .)


state 35

    (59) condition -> LESS_EQUAL .

    IDEN            reduce using rule 59 (condition -> LESS_EQUAL .)
    INT             reduce using rule 59 (condition -> LESS_EQUAL .)


state 36

    (60) condition -> MORE_EQUAL .

    IDEN            reduce using rule 60 (condition -> MORE_EQUAL .)
    INT             reduce using rule 60 (condition -> MORE_EQUAL .)


state 37

    (42) var_declare -> DCL IDEN . value
    (43) value -> . initialize
    (44) value -> . empty
    (45) initialize -> . ASSIGN expression
    (61) empty -> .

    ASSIGN          shift and go to state 56
    $end            reduce using rule 61 (empty -> .)

    value                          shift and go to state 53
    initialize                     shift and go to state 54
    empty                          shift and go to state 55

state 38

    (7) proc -> LLAMAR IDEN . LPAR params RPAR

    LPAR            shift and go to state 57


state 39

    (26) repeat -> REPITA actions . MIENTRAS comparative

    MIENTRAS        shift and go to state 58


state 40

    (37) actions -> sentence . more_actions
    (38) more_actions -> . SEPARATOR more_actions_aux
    (39) more_actions -> . empty
    (61) empty -> .

    SEPARATOR       shift and go to state 60
    MIENTRAS        reduce using rule 61 (empty -> .)
    RBRACE          reduce using rule 61 (empty -> .)
    FINDESDE        reduce using rule 61 (empty -> .)

    more_actions                   shift and go to state 59
    empty                          shift and go to state 61

state 41

    (47) var_assign -> IDEN . EQUALS expression

    EQUALS          shift and go to state 30


state 42

    (25) do -> DESDE IDEN . EQUALS expression HASTA expression HAGA actions FINDESDE

    EQUALS          shift and go to state 62


state 43

    (33) syntax1 -> ENCASO options1 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 63


state 44

    (29) syntax2 -> ENCASO IDEN . options2 SINO LBRACE actions RBRACE FINCASO
    (30) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2

    CUANDO          shift and go to state 65

    options2                       shift and go to state 64

state 45

    (34) options1 -> CUANDO . comparative ENTONS LBRACE actions RBRACE more_options1
    (46) comparative -> . IDEN condition expression

    IDEN            shift and go to state 67

    comparative                    shift and go to state 66

state 46

    (21) moves -> moves_aux LPAR . IDEN COMMA INT RPAR

    IDEN            shift and go to state 68


state 47

    (20) random -> ALEATORIO LPAR . RPAR

    RPAR            shift and go to state 69


state 48

    (19) changes -> MOVER LPAR . IDEN RPAR

    IDEN            shift and go to state 70


state 49

    (49) expression -> IDEN .

    MULTIPLY        reduce using rule 49 (expression -> IDEN .)
    DIVIDE          reduce using rule 49 (expression -> IDEN .)
    PLUS            reduce using rule 49 (expression -> IDEN .)
    MINUS           reduce using rule 49 (expression -> IDEN .)
    $end            reduce using rule 49 (expression -> IDEN .)
    ENTONS          reduce using rule 49 (expression -> IDEN .)
    SEPARATOR       reduce using rule 49 (expression -> IDEN .)
    MIENTRAS        reduce using rule 49 (expression -> IDEN .)
    RBRACE          reduce using rule 49 (expression -> IDEN .)
    FINDESDE        reduce using rule 49 (expression -> IDEN .)
    COMMA           reduce using rule 49 (expression -> IDEN .)
    RPAR            reduce using rule 49 (expression -> IDEN .)
    HASTA           reduce using rule 49 (expression -> IDEN .)
    HAGA            reduce using rule 49 (expression -> IDEN .)


state 50

    (46) comparative -> IDEN condition expression .
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

    $end            reduce using rule 46 (comparative -> IDEN condition expression .)
    ENTONS          reduce using rule 46 (comparative -> IDEN condition expression .)
    SEPARATOR       reduce using rule 46 (comparative -> IDEN condition expression .)
    MIENTRAS        reduce using rule 46 (comparative -> IDEN condition expression .)
    RBRACE          reduce using rule 46 (comparative -> IDEN condition expression .)
    FINDESDE        reduce using rule 46 (comparative -> IDEN condition expression .)
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    operator                       shift and go to state 71

state 51

    (50) expression -> INT .

    MULTIPLY        reduce using rule 50 (expression -> INT .)
    DIVIDE          reduce using rule 50 (expression -> INT .)
    PLUS            reduce using rule 50 (expression -> INT .)
    MINUS           reduce using rule 50 (expression -> INT .)
    $end            reduce using rule 50 (expression -> INT .)
    ENTONS          reduce using rule 50 (expression -> INT .)
    SEPARATOR       reduce using rule 50 (expression -> INT .)
    MIENTRAS        reduce using rule 50 (expression -> INT .)
    RBRACE          reduce using rule 50 (expression -> INT .)
    FINDESDE        reduce using rule 50 (expression -> INT .)
    COMMA           reduce using rule 50 (expression -> INT .)
    RPAR            reduce using rule 50 (expression -> INT .)
    HASTA           reduce using rule 50 (expression -> INT .)
    HAGA            reduce using rule 50 (expression -> INT .)


state 52

    (47) var_assign -> IDEN EQUALS expression .
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

    $end            reduce using rule 47 (var_assign -> IDEN EQUALS expression .)
    SEPARATOR       reduce using rule 47 (var_assign -> IDEN EQUALS expression .)
    MIENTRAS        reduce using rule 47 (var_assign -> IDEN EQUALS expression .)
    RBRACE          reduce using rule 47 (var_assign -> IDEN EQUALS expression .)
    FINDESDE        reduce using rule 47 (var_assign -> IDEN EQUALS expression .)
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    operator                       shift and go to state 71

state 53

    (42) var_declare -> DCL IDEN value .

    $end            reduce using rule 42 (var_declare -> DCL IDEN value .)


state 54

    (43) value -> initialize .

    $end            reduce using rule 43 (value -> initialize .)


state 55

    (44) value -> empty .

    $end            reduce using rule 44 (value -> empty .)


state 56

    (45) initialize -> ASSIGN . expression
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 76

state 57

    (7) proc -> LLAMAR IDEN LPAR . params RPAR
    (8) params -> . expression more_params
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    params                         shift and go to state 77
    expression                     shift and go to state 78

state 58

    (26) repeat -> REPITA actions MIENTRAS . comparative
    (46) comparative -> . IDEN condition expression

    IDEN            shift and go to state 67

    comparative                    shift and go to state 79

state 59

    (37) actions -> sentence more_actions .

    MIENTRAS        reduce using rule 37 (actions -> sentence more_actions .)
    RBRACE          reduce using rule 37 (actions -> sentence more_actions .)
    FINDESDE        reduce using rule 37 (actions -> sentence more_actions .)


state 60

    (38) more_actions -> SEPARATOR . more_actions_aux
    (40) more_actions_aux -> . actions
    (41) more_actions_aux -> . empty
    (37) actions -> . sentence more_actions
    (61) empty -> .
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    MIENTRAS        reduce using rule 61 (empty -> .)
    RBRACE          reduce using rule 61 (empty -> .)
    FINDESDE        reduce using rule 61 (empty -> .)
    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    more_actions_aux               shift and go to state 80
    actions                        shift and go to state 81
    empty                          shift and go to state 82
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 61

    (39) more_actions -> empty .

    MIENTRAS        reduce using rule 39 (more_actions -> empty .)
    RBRACE          reduce using rule 39 (more_actions -> empty .)
    FINDESDE        reduce using rule 39 (more_actions -> empty .)


state 62

    (25) do -> DESDE IDEN EQUALS . expression HASTA expression HAGA actions FINDESDE
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 83

state 63

    (33) syntax1 -> ENCASO options1 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 84


state 64

    (29) syntax2 -> ENCASO IDEN options2 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 85


state 65

    (30) options2 -> CUANDO . condition expression ENTONS LBRACE actions RBRACE more_options2
    (55) condition -> . SAME
    (56) condition -> . LESS
    (57) condition -> . MORE
    (58) condition -> . NON_EQUAL
    (59) condition -> . LESS_EQUAL
    (60) condition -> . MORE_EQUAL

    SAME            shift and go to state 31
    LESS            shift and go to state 32
    MORE            shift and go to state 33
    NON_EQUAL       shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    MORE_EQUAL      shift and go to state 36

    condition                      shift and go to state 86

state 66

    (34) options1 -> CUANDO comparative . ENTONS LBRACE actions RBRACE more_options1

    ENTONS          shift and go to state 87


state 67

    (46) comparative -> IDEN . condition expression
    (55) condition -> . SAME
    (56) condition -> . LESS
    (57) condition -> . MORE
    (58) condition -> . NON_EQUAL
    (59) condition -> . LESS_EQUAL
    (60) condition -> . MORE_EQUAL

    SAME            shift and go to state 31
    LESS            shift and go to state 32
    MORE            shift and go to state 33
    NON_EQUAL       shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    MORE_EQUAL      shift and go to state 36

    condition                      shift and go to state 29

state 68

    (21) moves -> moves_aux LPAR IDEN . COMMA INT RPAR

    COMMA           shift and go to state 88


state 69

    (20) random -> ALEATORIO LPAR RPAR .

    $end            reduce using rule 20 (random -> ALEATORIO LPAR RPAR .)
    SEPARATOR       reduce using rule 20 (random -> ALEATORIO LPAR RPAR .)
    MIENTRAS        reduce using rule 20 (random -> ALEATORIO LPAR RPAR .)
    RBRACE          reduce using rule 20 (random -> ALEATORIO LPAR RPAR .)
    FINDESDE        reduce using rule 20 (random -> ALEATORIO LPAR RPAR .)


state 70

    (19) changes -> MOVER LPAR IDEN . RPAR

    RPAR            shift and go to state 89


state 71

    (48) expression -> expression operator . expression
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 90

state 72

    (51) operator -> MULTIPLY .

    IDEN            reduce using rule 51 (operator -> MULTIPLY .)
    INT             reduce using rule 51 (operator -> MULTIPLY .)


state 73

    (52) operator -> DIVIDE .

    IDEN            reduce using rule 52 (operator -> DIVIDE .)
    INT             reduce using rule 52 (operator -> DIVIDE .)


state 74

    (53) operator -> PLUS .

    IDEN            reduce using rule 53 (operator -> PLUS .)
    INT             reduce using rule 53 (operator -> PLUS .)


state 75

    (54) operator -> MINUS .

    IDEN            reduce using rule 54 (operator -> MINUS .)
    INT             reduce using rule 54 (operator -> MINUS .)


state 76

    (45) initialize -> ASSIGN expression .
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

    $end            reduce using rule 45 (initialize -> ASSIGN expression .)
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    operator                       shift and go to state 71

state 77

    (7) proc -> LLAMAR IDEN LPAR params . RPAR

    RPAR            shift and go to state 91


state 78

    (8) params -> expression . more_params
    (48) expression -> expression . operator expression
    (9) more_params -> . COMMA params
    (10) more_params -> . empty
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS
    (61) empty -> .

    COMMA           shift and go to state 93
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    RPAR            reduce using rule 61 (empty -> .)

    more_params                    shift and go to state 92
    operator                       shift and go to state 71
    empty                          shift and go to state 94

state 79

    (26) repeat -> REPITA actions MIENTRAS comparative .

    $end            reduce using rule 26 (repeat -> REPITA actions MIENTRAS comparative .)
    SEPARATOR       reduce using rule 26 (repeat -> REPITA actions MIENTRAS comparative .)
    MIENTRAS        reduce using rule 26 (repeat -> REPITA actions MIENTRAS comparative .)
    RBRACE          reduce using rule 26 (repeat -> REPITA actions MIENTRAS comparative .)
    FINDESDE        reduce using rule 26 (repeat -> REPITA actions MIENTRAS comparative .)


state 80

    (38) more_actions -> SEPARATOR more_actions_aux .

    MIENTRAS        reduce using rule 38 (more_actions -> SEPARATOR more_actions_aux .)
    RBRACE          reduce using rule 38 (more_actions -> SEPARATOR more_actions_aux .)
    FINDESDE        reduce using rule 38 (more_actions -> SEPARATOR more_actions_aux .)


state 81

    (40) more_actions_aux -> actions .

    MIENTRAS        reduce using rule 40 (more_actions_aux -> actions .)
    RBRACE          reduce using rule 40 (more_actions_aux -> actions .)
    FINDESDE        reduce using rule 40 (more_actions_aux -> actions .)


state 82

    (41) more_actions_aux -> empty .

    MIENTRAS        reduce using rule 41 (more_actions_aux -> empty .)
    RBRACE          reduce using rule 41 (more_actions_aux -> empty .)
    FINDESDE        reduce using rule 41 (more_actions_aux -> empty .)


state 83

    (25) do -> DESDE IDEN EQUALS expression . HASTA expression HAGA actions FINDESDE
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

    HASTA           shift and go to state 95
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    operator                       shift and go to state 71

state 84

    (33) syntax1 -> ENCASO options1 SINO LBRACE . actions RBRACE FINCASO
    (37) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 96
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 85

    (29) syntax2 -> ENCASO IDEN options2 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 97


state 86

    (30) options2 -> CUANDO condition . expression ENTONS LBRACE actions RBRACE more_options2
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 98

state 87

    (34) options1 -> CUANDO comparative ENTONS . LBRACE actions RBRACE more_options1

    LBRACE          shift and go to state 99


state 88

    (21) moves -> moves_aux LPAR IDEN COMMA . INT RPAR

    INT             shift and go to state 100


state 89

    (19) changes -> MOVER LPAR IDEN RPAR .

    $end            reduce using rule 19 (changes -> MOVER LPAR IDEN RPAR .)
    SEPARATOR       reduce using rule 19 (changes -> MOVER LPAR IDEN RPAR .)
    MIENTRAS        reduce using rule 19 (changes -> MOVER LPAR IDEN RPAR .)
    RBRACE          reduce using rule 19 (changes -> MOVER LPAR IDEN RPAR .)
    FINDESDE        reduce using rule 19 (changes -> MOVER LPAR IDEN RPAR .)


state 90

    (48) expression -> expression operator expression .
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 48 (expression -> expression operator expression .)
    ENTONS          reduce using rule 48 (expression -> expression operator expression .)
    SEPARATOR       reduce using rule 48 (expression -> expression operator expression .)
    MIENTRAS        reduce using rule 48 (expression -> expression operator expression .)
    RBRACE          reduce using rule 48 (expression -> expression operator expression .)
    FINDESDE        reduce using rule 48 (expression -> expression operator expression .)
    COMMA           reduce using rule 48 (expression -> expression operator expression .)
    RPAR            reduce using rule 48 (expression -> expression operator expression .)
    HASTA           reduce using rule 48 (expression -> expression operator expression .)
    HAGA            reduce using rule 48 (expression -> expression operator expression .)
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MULTIPLY        [ reduce using rule 48 (expression -> expression operator expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression operator expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression operator expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression operator expression .) ]

    operator                       shift and go to state 71

state 91

    (7) proc -> LLAMAR IDEN LPAR params RPAR .

    $end            reduce using rule 7 (proc -> LLAMAR IDEN LPAR params RPAR .)


state 92

    (8) params -> expression more_params .

    RPAR            reduce using rule 8 (params -> expression more_params .)


state 93

    (9) more_params -> COMMA . params
    (8) params -> . expression more_params
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    params                         shift and go to state 101
    expression                     shift and go to state 78

state 94

    (10) more_params -> empty .

    RPAR            reduce using rule 10 (more_params -> empty .)


state 95

    (25) do -> DESDE IDEN EQUALS expression HASTA . expression HAGA actions FINDESDE
    (48) expression -> . expression operator expression
    (49) expression -> . IDEN
    (50) expression -> . INT

    IDEN            shift and go to state 49
    INT             shift and go to state 51

    expression                     shift and go to state 102

state 96

    (33) syntax1 -> ENCASO options1 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 103


state 97

    (29) syntax2 -> ENCASO IDEN options2 SINO LBRACE . actions RBRACE FINCASO
    (37) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 104
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 98

    (30) options2 -> CUANDO condition expression . ENTONS LBRACE actions RBRACE more_options2
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

    ENTONS          shift and go to state 105
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    operator                       shift and go to state 71

state 99

    (34) options1 -> CUANDO comparative ENTONS LBRACE . actions RBRACE more_options1
    (37) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 106
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 100

    (21) moves -> moves_aux LPAR IDEN COMMA INT . RPAR

    RPAR            shift and go to state 107


state 101

    (9) more_params -> COMMA params .

    RPAR            reduce using rule 9 (more_params -> COMMA params .)


state 102

    (25) do -> DESDE IDEN EQUALS expression HASTA expression . HAGA actions FINDESDE
    (48) expression -> expression . operator expression
    (51) operator -> . MULTIPLY
    (52) operator -> . DIVIDE
    (53) operator -> . PLUS
    (54) operator -> . MINUS

    HAGA            shift and go to state 108
    MULTIPLY        shift and go to state 72
    DIVIDE          shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    operator                       shift and go to state 71

state 103

    (33) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 109


state 104

    (29) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 110


state 105

    (30) options2 -> CUANDO condition expression ENTONS . LBRACE actions RBRACE more_options2

    LBRACE          shift and go to state 111


state 106

    (34) options1 -> CUANDO comparative ENTONS LBRACE actions . RBRACE more_options1

    RBRACE          shift and go to state 112


state 107

    (21) moves -> moves_aux LPAR IDEN COMMA INT RPAR .

    $end            reduce using rule 21 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    SEPARATOR       reduce using rule 21 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    MIENTRAS        reduce using rule 21 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    RBRACE          reduce using rule 21 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)
    FINDESDE        reduce using rule 21 (moves -> moves_aux LPAR IDEN COMMA INT RPAR .)


state 108

    (25) do -> DESDE IDEN EQUALS expression HASTA expression HAGA . actions FINDESDE
    (37) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 113
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 109

    (33) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 33 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    SEPARATOR       reduce using rule 33 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    MIENTRAS        reduce using rule 33 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    RBRACE          reduce using rule 33 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)
    FINDESDE        reduce using rule 33 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)


state 110

    (29) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 114


state 111

    (30) options2 -> CUANDO condition expression ENTONS LBRACE . actions RBRACE more_options2
    (37) actions -> . sentence more_actions
    (11) sentence -> . var_assign
    (12) sentence -> . cases
    (13) sentence -> . repeat
    (14) sentence -> . do
    (15) sentence -> . function
    (47) var_assign -> . IDEN EQUALS expression
    (27) cases -> . syntax1
    (28) cases -> . syntax2
    (26) repeat -> . REPITA actions MIENTRAS comparative
    (25) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE
    (16) function -> . moves
    (17) function -> . random
    (18) function -> . changes
    (33) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (29) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (21) moves -> . moves_aux LPAR IDEN COMMA INT RPAR
    (20) random -> . ALEATORIO LPAR RPAR
    (19) changes -> . MOVER LPAR IDEN RPAR
    (22) moves_aux -> . INC
    (23) moves_aux -> . DEC
    (24) moves_aux -> . INI

    IDEN            shift and go to state 41
    REPITA          shift and go to state 17
    DESDE           shift and go to state 18
    ENCASO          shift and go to state 22
    ALEATORIO       shift and go to state 24
    MOVER           shift and go to state 25
    INC             shift and go to state 26
    DEC             shift and go to state 27
    INI             shift and go to state 28

    actions                        shift and go to state 115
    sentence                       shift and go to state 40
    var_assign                     shift and go to state 8
    cases                          shift and go to state 9
    repeat                         shift and go to state 10
    do                             shift and go to state 11
    function                       shift and go to state 12
    syntax1                        shift and go to state 15
    syntax2                        shift and go to state 16
    moves                          shift and go to state 19
    random                         shift and go to state 20
    changes                        shift and go to state 21
    moves_aux                      shift and go to state 23

state 112

    (34) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE . more_options1
    (35) more_options1 -> . options1
    (36) more_options1 -> . empty
    (34) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
    (61) empty -> .

    CUANDO          shift and go to state 45
    SINO            reduce using rule 61 (empty -> .)

    more_options1                  shift and go to state 116
    options1                       shift and go to state 117
    empty                          shift and go to state 118

state 113

    (25) do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions . FINDESDE

    FINDESDE        shift and go to state 119


state 114

    (29) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 29 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    SEPARATOR       reduce using rule 29 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    MIENTRAS        reduce using rule 29 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    RBRACE          reduce using rule 29 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)
    FINDESDE        reduce using rule 29 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)


state 115

    (30) options2 -> CUANDO condition expression ENTONS LBRACE actions . RBRACE more_options2

    RBRACE          shift and go to state 120


state 116

    (34) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .

    SINO            reduce using rule 34 (options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .)


state 117

    (35) more_options1 -> options1 .

    SINO            reduce using rule 35 (more_options1 -> options1 .)


state 118

    (36) more_options1 -> empty .

    SINO            reduce using rule 36 (more_options1 -> empty .)


state 119

    (25) do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .

    $end            reduce using rule 25 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    SEPARATOR       reduce using rule 25 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    MIENTRAS        reduce using rule 25 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    RBRACE          reduce using rule 25 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)
    FINDESDE        reduce using rule 25 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE .)


state 120

    (30) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE . more_options2
    (31) more_options2 -> . options2
    (32) more_options2 -> . empty
    (30) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
    (61) empty -> .

    CUANDO          shift and go to state 65
    SINO            reduce using rule 61 (empty -> .)

    more_options2                  shift and go to state 121
    options2                       shift and go to state 122
    empty                          shift and go to state 123

state 121

    (30) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .

    SINO            reduce using rule 30 (options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .)


state 122

    (31) more_options2 -> options2 .

    SINO            reduce using rule 31 (more_options2 -> options2 .)


state 123

    (32) more_options2 -> empty .

    SINO            reduce using rule 32 (more_options2 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
