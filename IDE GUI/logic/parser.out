Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> parse
Rule 1     parse -> comparative
Rule 2     parse -> sentence
Rule 3     parse -> cases
Rule 4     parse -> empty
Rule 5     parse -> repeat
Rule 6     parse -> do
Rule 7     do -> DESDE IDEN EQUALS expression HASTA expression HAGA FINDESDE
Rule 8     repeat -> REPITA actions MIENTRAS comparative
Rule 9     cases -> syntax1
Rule 10    cases -> syntax2
Rule 11    syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO
Rule 12    options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
Rule 13    more_options2 -> options2
Rule 14    more_options2 -> empty
Rule 15    syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO
Rule 16    options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
Rule 17    more_options1 -> options1
Rule 18    more_options1 -> empty
Rule 19    actions -> var_assign more_actions
Rule 20    more_actions -> SEPARATOR actions
Rule 21    more_actions -> empty
Rule 22    sentence -> var_declare
Rule 23    sentence -> var_assign
Rule 24    var_declare -> DCL IDEN value
Rule 25    value -> initialize
Rule 26    value -> empty
Rule 27    initialize -> ASSIGN expression
Rule 28    comparative -> IDEN condition expression
Rule 29    var_assign -> IDEN EQUALS expression
Rule 30    expression -> expression operator expression
Rule 31    expression -> IDEN
Rule 32    expression -> INT
Rule 33    operator -> MULTIPLY
Rule 34    operator -> DIVIDE
Rule 35    operator -> PLUS
Rule 36    operator -> MINUS
Rule 37    condition -> SAME
Rule 38    condition -> LESS
Rule 39    condition -> MORE
Rule 40    condition -> NON_EQUAL
Rule 41    condition -> LESS_EQUAL
Rule 42    condition -> MORE_EQUAL
Rule 43    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 27
CUANDO               : 12 16
DCL                  : 24
DESDE                : 7
DIVIDE               : 34
ENCASO               : 11 15
ENTONS               : 12 16
EQUALS               : 7 29
FINCASO              : 11 15
FINDESDE             : 7
HAGA                 : 7
HASTA                : 7
IDEN                 : 7 11 24 28 29 31
INT                  : 32
LBRACE               : 11 12 15 16
LESS                 : 38
LESS_EQUAL           : 41
MIENTRAS             : 8
MINUS                : 36
MORE                 : 39
MORE_EQUAL           : 42
MULTIPLY             : 33
NON_EQUAL            : 40
PLUS                 : 35
RBRACE               : 11 12 15 16
REPITA               : 8
SAME                 : 37
SEPARATOR            : 20
SINO                 : 11 15
error                : 

Nonterminals, with rules where they appear

actions              : 8 11 12 15 16 20
cases                : 3
comparative          : 1 8 16
condition            : 12 28
do                   : 6
empty                : 4 14 18 21 26
expression           : 7 7 12 27 28 29 30 30
initialize           : 25
more_actions         : 19
more_options1        : 16
more_options2        : 12
operator             : 30
options1             : 15 17
options2             : 11 13
parse                : 0
repeat               : 5
sentence             : 2
syntax1              : 9
syntax2              : 10
value                : 24
var_assign           : 19 23
var_declare          : 22

Parsing method: LALR

state 0

    (0) S' -> . parse
    (1) parse -> . comparative
    (2) parse -> . sentence
    (3) parse -> . cases
    (4) parse -> . empty
    (5) parse -> . repeat
    (6) parse -> . do
    (28) comparative -> . IDEN condition expression
    (22) sentence -> . var_declare
    (23) sentence -> . var_assign
    (9) cases -> . syntax1
    (10) cases -> . syntax2
    (43) empty -> .
    (8) repeat -> . REPITA actions MIENTRAS comparative
    (7) do -> . DESDE IDEN EQUALS expression HASTA expression HAGA FINDESDE
    (24) var_declare -> . DCL IDEN value
    (29) var_assign -> . IDEN EQUALS expression
    (15) syntax1 -> . ENCASO options1 SINO LBRACE actions RBRACE FINCASO
    (11) syntax2 -> . ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO

    IDEN            shift and go to state 8
    $end            reduce using rule 43 (empty -> .)
    REPITA          shift and go to state 13
    DESDE           shift and go to state 14
    DCL             shift and go to state 15
    ENCASO          shift and go to state 16

    parse                          shift and go to state 1
    comparative                    shift and go to state 2
    sentence                       shift and go to state 3
    cases                          shift and go to state 4
    empty                          shift and go to state 5
    repeat                         shift and go to state 6
    do                             shift and go to state 7
    var_declare                    shift and go to state 9
    var_assign                     shift and go to state 10
    syntax1                        shift and go to state 11
    syntax2                        shift and go to state 12

state 1

    (0) S' -> parse .



state 2

    (1) parse -> comparative .

    $end            reduce using rule 1 (parse -> comparative .)


state 3

    (2) parse -> sentence .

    $end            reduce using rule 2 (parse -> sentence .)


state 4

    (3) parse -> cases .

    $end            reduce using rule 3 (parse -> cases .)


state 5

    (4) parse -> empty .

    $end            reduce using rule 4 (parse -> empty .)


state 6

    (5) parse -> repeat .

    $end            reduce using rule 5 (parse -> repeat .)


state 7

    (6) parse -> do .

    $end            reduce using rule 6 (parse -> do .)


state 8

    (28) comparative -> IDEN . condition expression
    (29) var_assign -> IDEN . EQUALS expression
    (37) condition -> . SAME
    (38) condition -> . LESS
    (39) condition -> . MORE
    (40) condition -> . NON_EQUAL
    (41) condition -> . LESS_EQUAL
    (42) condition -> . MORE_EQUAL

    EQUALS          shift and go to state 18
    SAME            shift and go to state 19
    LESS            shift and go to state 20
    MORE            shift and go to state 21
    NON_EQUAL       shift and go to state 22
    LESS_EQUAL      shift and go to state 23
    MORE_EQUAL      shift and go to state 24

    condition                      shift and go to state 17

state 9

    (22) sentence -> var_declare .

    $end            reduce using rule 22 (sentence -> var_declare .)


state 10

    (23) sentence -> var_assign .

    $end            reduce using rule 23 (sentence -> var_assign .)


state 11

    (9) cases -> syntax1 .

    $end            reduce using rule 9 (cases -> syntax1 .)


state 12

    (10) cases -> syntax2 .

    $end            reduce using rule 10 (cases -> syntax2 .)


state 13

    (8) repeat -> REPITA . actions MIENTRAS comparative
    (19) actions -> . var_assign more_actions
    (29) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 27

    actions                        shift and go to state 25
    var_assign                     shift and go to state 26

state 14

    (7) do -> DESDE . IDEN EQUALS expression HASTA expression HAGA FINDESDE

    IDEN            shift and go to state 28


state 15

    (24) var_declare -> DCL . IDEN value

    IDEN            shift and go to state 29


state 16

    (15) syntax1 -> ENCASO . options1 SINO LBRACE actions RBRACE FINCASO
    (11) syntax2 -> ENCASO . IDEN options2 SINO LBRACE actions RBRACE FINCASO
    (16) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1

    IDEN            shift and go to state 31
    CUANDO          shift and go to state 32

    options1                       shift and go to state 30

state 17

    (28) comparative -> IDEN condition . expression
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 34

state 18

    (29) var_assign -> IDEN EQUALS . expression
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 36

state 19

    (37) condition -> SAME .

    IDEN            reduce using rule 37 (condition -> SAME .)
    INT             reduce using rule 37 (condition -> SAME .)


state 20

    (38) condition -> LESS .

    IDEN            reduce using rule 38 (condition -> LESS .)
    INT             reduce using rule 38 (condition -> LESS .)


state 21

    (39) condition -> MORE .

    IDEN            reduce using rule 39 (condition -> MORE .)
    INT             reduce using rule 39 (condition -> MORE .)


state 22

    (40) condition -> NON_EQUAL .

    IDEN            reduce using rule 40 (condition -> NON_EQUAL .)
    INT             reduce using rule 40 (condition -> NON_EQUAL .)


state 23

    (41) condition -> LESS_EQUAL .

    IDEN            reduce using rule 41 (condition -> LESS_EQUAL .)
    INT             reduce using rule 41 (condition -> LESS_EQUAL .)


state 24

    (42) condition -> MORE_EQUAL .

    IDEN            reduce using rule 42 (condition -> MORE_EQUAL .)
    INT             reduce using rule 42 (condition -> MORE_EQUAL .)


state 25

    (8) repeat -> REPITA actions . MIENTRAS comparative

    MIENTRAS        shift and go to state 37


state 26

    (19) actions -> var_assign . more_actions
    (20) more_actions -> . SEPARATOR actions
    (21) more_actions -> . empty
    (43) empty -> .

    SEPARATOR       shift and go to state 39
    MIENTRAS        reduce using rule 43 (empty -> .)
    RBRACE          reduce using rule 43 (empty -> .)

    more_actions                   shift and go to state 38
    empty                          shift and go to state 40

state 27

    (29) var_assign -> IDEN . EQUALS expression

    EQUALS          shift and go to state 18


state 28

    (7) do -> DESDE IDEN . EQUALS expression HASTA expression HAGA FINDESDE

    EQUALS          shift and go to state 41


state 29

    (24) var_declare -> DCL IDEN . value
    (25) value -> . initialize
    (26) value -> . empty
    (27) initialize -> . ASSIGN expression
    (43) empty -> .

    ASSIGN          shift and go to state 45
    $end            reduce using rule 43 (empty -> .)

    value                          shift and go to state 42
    initialize                     shift and go to state 43
    empty                          shift and go to state 44

state 30

    (15) syntax1 -> ENCASO options1 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 46


state 31

    (11) syntax2 -> ENCASO IDEN . options2 SINO LBRACE actions RBRACE FINCASO
    (12) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2

    CUANDO          shift and go to state 48

    options2                       shift and go to state 47

state 32

    (16) options1 -> CUANDO . comparative ENTONS LBRACE actions RBRACE more_options1
    (28) comparative -> . IDEN condition expression

    IDEN            shift and go to state 50

    comparative                    shift and go to state 49

state 33

    (31) expression -> IDEN .

    MULTIPLY        reduce using rule 31 (expression -> IDEN .)
    DIVIDE          reduce using rule 31 (expression -> IDEN .)
    PLUS            reduce using rule 31 (expression -> IDEN .)
    MINUS           reduce using rule 31 (expression -> IDEN .)
    $end            reduce using rule 31 (expression -> IDEN .)
    ENTONS          reduce using rule 31 (expression -> IDEN .)
    SEPARATOR       reduce using rule 31 (expression -> IDEN .)
    MIENTRAS        reduce using rule 31 (expression -> IDEN .)
    RBRACE          reduce using rule 31 (expression -> IDEN .)
    HASTA           reduce using rule 31 (expression -> IDEN .)
    HAGA            reduce using rule 31 (expression -> IDEN .)


state 34

    (28) comparative -> IDEN condition expression .
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

    $end            reduce using rule 28 (comparative -> IDEN condition expression .)
    ENTONS          reduce using rule 28 (comparative -> IDEN condition expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

    operator                       shift and go to state 51

state 35

    (32) expression -> INT .

    MULTIPLY        reduce using rule 32 (expression -> INT .)
    DIVIDE          reduce using rule 32 (expression -> INT .)
    PLUS            reduce using rule 32 (expression -> INT .)
    MINUS           reduce using rule 32 (expression -> INT .)
    $end            reduce using rule 32 (expression -> INT .)
    ENTONS          reduce using rule 32 (expression -> INT .)
    SEPARATOR       reduce using rule 32 (expression -> INT .)
    MIENTRAS        reduce using rule 32 (expression -> INT .)
    RBRACE          reduce using rule 32 (expression -> INT .)
    HASTA           reduce using rule 32 (expression -> INT .)
    HAGA            reduce using rule 32 (expression -> INT .)


state 36

    (29) var_assign -> IDEN EQUALS expression .
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

    $end            reduce using rule 29 (var_assign -> IDEN EQUALS expression .)
    SEPARATOR       reduce using rule 29 (var_assign -> IDEN EQUALS expression .)
    MIENTRAS        reduce using rule 29 (var_assign -> IDEN EQUALS expression .)
    RBRACE          reduce using rule 29 (var_assign -> IDEN EQUALS expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

    operator                       shift and go to state 51

state 37

    (8) repeat -> REPITA actions MIENTRAS . comparative
    (28) comparative -> . IDEN condition expression

    IDEN            shift and go to state 50

    comparative                    shift and go to state 56

state 38

    (19) actions -> var_assign more_actions .

    MIENTRAS        reduce using rule 19 (actions -> var_assign more_actions .)
    RBRACE          reduce using rule 19 (actions -> var_assign more_actions .)


state 39

    (20) more_actions -> SEPARATOR . actions
    (19) actions -> . var_assign more_actions
    (29) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 27

    actions                        shift and go to state 57
    var_assign                     shift and go to state 26

state 40

    (21) more_actions -> empty .

    MIENTRAS        reduce using rule 21 (more_actions -> empty .)
    RBRACE          reduce using rule 21 (more_actions -> empty .)


state 41

    (7) do -> DESDE IDEN EQUALS . expression HASTA expression HAGA FINDESDE
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 58

state 42

    (24) var_declare -> DCL IDEN value .

    $end            reduce using rule 24 (var_declare -> DCL IDEN value .)


state 43

    (25) value -> initialize .

    $end            reduce using rule 25 (value -> initialize .)


state 44

    (26) value -> empty .

    $end            reduce using rule 26 (value -> empty .)


state 45

    (27) initialize -> ASSIGN . expression
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 59

state 46

    (15) syntax1 -> ENCASO options1 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 60


state 47

    (11) syntax2 -> ENCASO IDEN options2 . SINO LBRACE actions RBRACE FINCASO

    SINO            shift and go to state 61


state 48

    (12) options2 -> CUANDO . condition expression ENTONS LBRACE actions RBRACE more_options2
    (37) condition -> . SAME
    (38) condition -> . LESS
    (39) condition -> . MORE
    (40) condition -> . NON_EQUAL
    (41) condition -> . LESS_EQUAL
    (42) condition -> . MORE_EQUAL

    SAME            shift and go to state 19
    LESS            shift and go to state 20
    MORE            shift and go to state 21
    NON_EQUAL       shift and go to state 22
    LESS_EQUAL      shift and go to state 23
    MORE_EQUAL      shift and go to state 24

    condition                      shift and go to state 62

state 49

    (16) options1 -> CUANDO comparative . ENTONS LBRACE actions RBRACE more_options1

    ENTONS          shift and go to state 63


state 50

    (28) comparative -> IDEN . condition expression
    (37) condition -> . SAME
    (38) condition -> . LESS
    (39) condition -> . MORE
    (40) condition -> . NON_EQUAL
    (41) condition -> . LESS_EQUAL
    (42) condition -> . MORE_EQUAL

    SAME            shift and go to state 19
    LESS            shift and go to state 20
    MORE            shift and go to state 21
    NON_EQUAL       shift and go to state 22
    LESS_EQUAL      shift and go to state 23
    MORE_EQUAL      shift and go to state 24

    condition                      shift and go to state 17

state 51

    (30) expression -> expression operator . expression
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 64

state 52

    (33) operator -> MULTIPLY .

    IDEN            reduce using rule 33 (operator -> MULTIPLY .)
    INT             reduce using rule 33 (operator -> MULTIPLY .)


state 53

    (34) operator -> DIVIDE .

    IDEN            reduce using rule 34 (operator -> DIVIDE .)
    INT             reduce using rule 34 (operator -> DIVIDE .)


state 54

    (35) operator -> PLUS .

    IDEN            reduce using rule 35 (operator -> PLUS .)
    INT             reduce using rule 35 (operator -> PLUS .)


state 55

    (36) operator -> MINUS .

    IDEN            reduce using rule 36 (operator -> MINUS .)
    INT             reduce using rule 36 (operator -> MINUS .)


state 56

    (8) repeat -> REPITA actions MIENTRAS comparative .

    $end            reduce using rule 8 (repeat -> REPITA actions MIENTRAS comparative .)


state 57

    (20) more_actions -> SEPARATOR actions .

    MIENTRAS        reduce using rule 20 (more_actions -> SEPARATOR actions .)
    RBRACE          reduce using rule 20 (more_actions -> SEPARATOR actions .)


state 58

    (7) do -> DESDE IDEN EQUALS expression . HASTA expression HAGA FINDESDE
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

    HASTA           shift and go to state 65
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

    operator                       shift and go to state 51

state 59

    (27) initialize -> ASSIGN expression .
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

    $end            reduce using rule 27 (initialize -> ASSIGN expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

    operator                       shift and go to state 51

state 60

    (15) syntax1 -> ENCASO options1 SINO LBRACE . actions RBRACE FINCASO
    (19) actions -> . var_assign more_actions
    (29) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 27

    actions                        shift and go to state 66
    var_assign                     shift and go to state 26

state 61

    (11) syntax2 -> ENCASO IDEN options2 SINO . LBRACE actions RBRACE FINCASO

    LBRACE          shift and go to state 67


state 62

    (12) options2 -> CUANDO condition . expression ENTONS LBRACE actions RBRACE more_options2
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 68

state 63

    (16) options1 -> CUANDO comparative ENTONS . LBRACE actions RBRACE more_options1

    LBRACE          shift and go to state 69


state 64

    (30) expression -> expression operator expression .
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 30 (expression -> expression operator expression .)
    ENTONS          reduce using rule 30 (expression -> expression operator expression .)
    SEPARATOR       reduce using rule 30 (expression -> expression operator expression .)
    MIENTRAS        reduce using rule 30 (expression -> expression operator expression .)
    RBRACE          reduce using rule 30 (expression -> expression operator expression .)
    HASTA           reduce using rule 30 (expression -> expression operator expression .)
    HAGA            reduce using rule 30 (expression -> expression operator expression .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

  ! MULTIPLY        [ reduce using rule 30 (expression -> expression operator expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression operator expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression operator expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression operator expression .) ]

    operator                       shift and go to state 51

state 65

    (7) do -> DESDE IDEN EQUALS expression HASTA . expression HAGA FINDESDE
    (30) expression -> . expression operator expression
    (31) expression -> . IDEN
    (32) expression -> . INT

    IDEN            shift and go to state 33
    INT             shift and go to state 35

    expression                     shift and go to state 70

state 66

    (15) syntax1 -> ENCASO options1 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 71


state 67

    (11) syntax2 -> ENCASO IDEN options2 SINO LBRACE . actions RBRACE FINCASO
    (19) actions -> . var_assign more_actions
    (29) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 27

    actions                        shift and go to state 72
    var_assign                     shift and go to state 26

state 68

    (12) options2 -> CUANDO condition expression . ENTONS LBRACE actions RBRACE more_options2
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

    ENTONS          shift and go to state 73
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

    operator                       shift and go to state 51

state 69

    (16) options1 -> CUANDO comparative ENTONS LBRACE . actions RBRACE more_options1
    (19) actions -> . var_assign more_actions
    (29) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 27

    actions                        shift and go to state 74
    var_assign                     shift and go to state 26

state 70

    (7) do -> DESDE IDEN EQUALS expression HASTA expression . HAGA FINDESDE
    (30) expression -> expression . operator expression
    (33) operator -> . MULTIPLY
    (34) operator -> . DIVIDE
    (35) operator -> . PLUS
    (36) operator -> . MINUS

    HAGA            shift and go to state 75
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55

    operator                       shift and go to state 51

state 71

    (15) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 76


state 72

    (11) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions . RBRACE FINCASO

    RBRACE          shift and go to state 77


state 73

    (12) options2 -> CUANDO condition expression ENTONS . LBRACE actions RBRACE more_options2

    LBRACE          shift and go to state 78


state 74

    (16) options1 -> CUANDO comparative ENTONS LBRACE actions . RBRACE more_options1

    RBRACE          shift and go to state 79


state 75

    (7) do -> DESDE IDEN EQUALS expression HASTA expression HAGA . FINDESDE

    FINDESDE        shift and go to state 80


state 76

    (15) syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 15 (syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO .)


state 77

    (11) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE . FINCASO

    FINCASO         shift and go to state 81


state 78

    (12) options2 -> CUANDO condition expression ENTONS LBRACE . actions RBRACE more_options2
    (19) actions -> . var_assign more_actions
    (29) var_assign -> . IDEN EQUALS expression

    IDEN            shift and go to state 27

    actions                        shift and go to state 82
    var_assign                     shift and go to state 26

state 79

    (16) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE . more_options1
    (17) more_options1 -> . options1
    (18) more_options1 -> . empty
    (16) options1 -> . CUANDO comparative ENTONS LBRACE actions RBRACE more_options1
    (43) empty -> .

    CUANDO          shift and go to state 32
    SINO            reduce using rule 43 (empty -> .)

    more_options1                  shift and go to state 83
    options1                       shift and go to state 84
    empty                          shift and go to state 85

state 80

    (7) do -> DESDE IDEN EQUALS expression HASTA expression HAGA FINDESDE .

    $end            reduce using rule 7 (do -> DESDE IDEN EQUALS expression HASTA expression HAGA FINDESDE .)


state 81

    (11) syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .

    $end            reduce using rule 11 (syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO .)


state 82

    (12) options2 -> CUANDO condition expression ENTONS LBRACE actions . RBRACE more_options2

    RBRACE          shift and go to state 86


state 83

    (16) options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .

    SINO            reduce using rule 16 (options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1 .)


state 84

    (17) more_options1 -> options1 .

    SINO            reduce using rule 17 (more_options1 -> options1 .)


state 85

    (18) more_options1 -> empty .

    SINO            reduce using rule 18 (more_options1 -> empty .)


state 86

    (12) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE . more_options2
    (13) more_options2 -> . options2
    (14) more_options2 -> . empty
    (12) options2 -> . CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2
    (43) empty -> .

    CUANDO          shift and go to state 48
    SINO            reduce using rule 43 (empty -> .)

    more_options2                  shift and go to state 87
    options2                       shift and go to state 88
    empty                          shift and go to state 89

state 87

    (12) options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .

    SINO            reduce using rule 12 (options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2 .)


state 88

    (13) more_options2 -> options2 .

    SINO            reduce using rule 13 (more_options2 -> options2 .)


state 89

    (14) more_options2 -> empty .

    SINO            reduce using rule 14 (more_options2 -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
