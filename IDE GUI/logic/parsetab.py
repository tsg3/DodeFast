
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEALEATORIO ASSIGN COMMA CUANDO DCL DEC DESDE DIVIDE ENCASO ENTONS EQUALS FINCASO FINDESDE HAGA HASTA IDEN INC INI INT LBRACE LESS LESS_EQUAL LLAMAR LPAR MIENTRAS MINUS MORE MORE_EQUAL MOVER MULTIPLY NON_EQUAL PLUS RBRACE REPITA RPAR SAME SEPARATOR SINO\n    parse : comparative\n          | sentence\n          | var_declare\n          | proc\n          | empty\n    \n    proc : LLAMAR IDEN LPAR params RPAR\n    \n    params : expression more_params\n    \n    more_params : COMMA params\n                | empty\n    \n    sentence : var_assign\n             | cases\n             | repeat\n             | do\n             | function\n    \n    function : moves\n             | random\n             | changes\n    \n    changes : MOVER LPAR IDEN RPAR\n    \n    random : ALEATORIO LPAR RPAR\n    \n    moves : moves_aux LPAR IDEN COMMA INT RPAR\n    \n    moves_aux : INC\n              | DEC\n              | INI\n    \n    do : DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE\n    \n    repeat : REPITA actions MIENTRAS comparative\n    \n    cases : syntax1\n          | syntax2\n    \n    syntax2 : ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO\n    \n    options2 : CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2\n    \n    more_options2 : options2\n                 | empty\n    \n    syntax1 : ENCASO options1 SINO LBRACE actions RBRACE FINCASO\n    \n    options1 : CUANDO comparative ENTONS LBRACE actions RBRACE more_options1\n    \n    more_options1 : options1\n                  | empty\n    \n    actions : sentence more_actions\n    \n    more_actions : SEPARATOR more_actions_aux\n                 | empty\n    \n    more_actions_aux : actions\n                     | empty\n    \n    var_declare : DCL IDEN value\n    \n    value : initialize\n          | empty\n    \n    initialize : ASSIGN expression\n    \n    comparative : IDEN condition expression\n    \n    var_assign : IDEN EQUALS expression\n    \n    expression : expression operator expression\n    \n    expression : IDEN\n    \n    expression : INT\n    \n    operator : MULTIPLY\n             | DIVIDE\n             | PLUS\n             | MINUS\n    \n    condition : SAME\n              | LESS\n              | MORE\n              | NON_EQUAL\n              | LESS_EQUAL\n              | MORE_EQUAL\n    \n    empty :\n    '
    
_lr_action_items = {'IDEN':([0,13,14,17,18,22,29,30,31,32,33,34,35,36,45,46,48,56,57,58,60,62,71,72,73,74,75,84,86,93,95,97,99,108,111,],[7,37,38,41,42,44,49,49,-54,-55,-56,-57,-58,-59,67,68,70,49,49,67,41,49,49,-50,-51,-52,-53,41,49,49,49,41,41,41,41,]),'DCL':([0,],[13,]),'LLAMAR':([0,],[14,]),'$end':([0,1,2,3,4,5,6,8,9,10,11,12,15,16,19,20,21,37,49,50,51,52,53,54,55,69,76,79,89,90,91,107,109,114,119,],[-60,0,-1,-2,-3,-4,-5,-10,-11,-12,-13,-14,-26,-27,-15,-16,-17,-60,-48,-45,-49,-46,-41,-42,-43,-19,-44,-25,-18,-47,-6,-20,-32,-28,-24,]),'REPITA':([0,17,60,84,97,99,108,111,],[17,17,17,17,17,17,17,17,]),'DESDE':([0,17,60,84,97,99,108,111,],[18,18,18,18,18,18,18,18,]),'ENCASO':([0,17,60,84,97,99,108,111,],[22,22,22,22,22,22,22,22,]),'ALEATORIO':([0,17,60,84,97,99,108,111,],[24,24,24,24,24,24,24,24,]),'MOVER':([0,17,60,84,97,99,108,111,],[25,25,25,25,25,25,25,25,]),'INC':([0,17,60,84,97,99,108,111,],[26,26,26,26,26,26,26,26,]),'DEC':([0,17,60,84,97,99,108,111,],[27,27,27,27,27,27,27,27,]),'INI':([0,17,60,84,97,99,108,111,],[28,28,28,28,28,28,28,28,]),'EQUALS':([7,41,42,],[30,30,62,]),'SAME':([7,65,67,],[31,31,31,]),'LESS':([7,65,67,],[32,32,32,]),'MORE':([7,65,67,],[33,33,33,]),'NON_EQUAL':([7,65,67,],[34,34,34,]),'LESS_EQUAL':([7,65,67,],[35,35,35,]),'MORE_EQUAL':([7,65,67,],[36,36,36,]),'SEPARATOR':([8,9,10,11,12,15,16,19,20,21,40,49,50,51,52,69,79,89,90,107,109,114,119,],[-10,-11,-12,-13,-14,-26,-27,-15,-16,-17,60,-48,-45,-49,-46,-19,-25,-18,-47,-20,-32,-28,-24,]),'MIENTRAS':([8,9,10,11,12,15,16,19,20,21,39,40,49,50,51,52,59,60,61,69,79,80,81,82,89,90,107,109,114,119,],[-10,-11,-12,-13,-14,-26,-27,-15,-16,-17,58,-60,-48,-45,-49,-46,-36,-60,-38,-19,-25,-37,-39,-40,-18,-47,-20,-32,-28,-24,]),'RBRACE':([8,9,10,11,12,15,16,19,20,21,40,49,50,51,52,59,60,61,69,79,80,81,82,89,90,96,104,106,107,109,114,115,119,],[-10,-11,-12,-13,-14,-26,-27,-15,-16,-17,-60,-48,-45,-49,-46,-36,-60,-38,-19,-25,-37,-39,-40,-18,-47,103,110,112,-20,-32,-28,120,-24,]),'FINDESDE':([8,9,10,11,12,15,16,19,20,21,40,49,50,51,52,59,60,61,69,79,80,81,82,89,90,107,109,113,114,119,],[-10,-11,-12,-13,-14,-26,-27,-15,-16,-17,-60,-48,-45,-49,-46,-36,-60,-38,-19,-25,-37,-39,-40,-18,-47,-20,-32,119,-28,-24,]),'CUANDO':([22,44,112,120,],[45,65,45,65,]),'LPAR':([23,24,25,26,27,28,38,],[46,47,48,-21,-22,-23,57,]),'INT':([29,30,31,32,33,34,35,36,56,57,62,71,72,73,74,75,86,88,93,95,],[51,51,-54,-55,-56,-57,-58,-59,51,51,51,51,-50,-51,-52,-53,51,100,51,51,]),'ASSIGN':([37,],[56,]),'SINO':([43,64,112,116,117,118,120,121,122,123,],[63,85,-60,-33,-34,-35,-60,-29,-30,-31,]),'RPAR':([47,49,51,70,77,78,90,92,94,100,101,],[69,-48,-49,89,91,-60,-47,-7,-9,107,-8,]),'MULTIPLY':([49,50,51,52,76,78,83,90,98,102,],[-48,72,-49,72,72,72,72,72,72,72,]),'DIVIDE':([49,50,51,52,76,78,83,90,98,102,],[-48,73,-49,73,73,73,73,73,73,73,]),'PLUS':([49,50,51,52,76,78,83,90,98,102,],[-48,74,-49,74,74,74,74,74,74,74,]),'MINUS':([49,50,51,52,76,78,83,90,98,102,],[-48,75,-49,75,75,75,75,75,75,75,]),'ENTONS':([49,50,51,66,90,98,],[-48,-45,-49,87,-47,105,]),'COMMA':([49,51,68,78,90,],[-48,-49,88,93,-47,]),'HASTA':([49,51,83,90,],[-48,-49,95,-47,]),'HAGA':([49,51,90,102,],[-48,-49,-47,108,]),'LBRACE':([63,85,87,105,],[84,97,99,111,]),'FINCASO':([103,110,],[109,114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parse':([0,],[1,]),'comparative':([0,45,58,],[2,66,79,]),'sentence':([0,17,60,84,97,99,108,111,],[3,40,40,40,40,40,40,40,]),'var_declare':([0,],[4,]),'proc':([0,],[5,]),'empty':([0,37,40,60,78,112,120,],[6,55,61,82,94,118,123,]),'var_assign':([0,17,60,84,97,99,108,111,],[8,8,8,8,8,8,8,8,]),'cases':([0,17,60,84,97,99,108,111,],[9,9,9,9,9,9,9,9,]),'repeat':([0,17,60,84,97,99,108,111,],[10,10,10,10,10,10,10,10,]),'do':([0,17,60,84,97,99,108,111,],[11,11,11,11,11,11,11,11,]),'function':([0,17,60,84,97,99,108,111,],[12,12,12,12,12,12,12,12,]),'syntax1':([0,17,60,84,97,99,108,111,],[15,15,15,15,15,15,15,15,]),'syntax2':([0,17,60,84,97,99,108,111,],[16,16,16,16,16,16,16,16,]),'moves':([0,17,60,84,97,99,108,111,],[19,19,19,19,19,19,19,19,]),'random':([0,17,60,84,97,99,108,111,],[20,20,20,20,20,20,20,20,]),'changes':([0,17,60,84,97,99,108,111,],[21,21,21,21,21,21,21,21,]),'moves_aux':([0,17,60,84,97,99,108,111,],[23,23,23,23,23,23,23,23,]),'condition':([7,65,67,],[29,86,29,]),'actions':([17,60,84,97,99,108,111,],[39,81,96,104,106,113,115,]),'options1':([22,112,],[43,117,]),'expression':([29,30,56,57,62,71,86,93,95,],[50,52,76,78,83,90,98,78,102,]),'value':([37,],[53,]),'initialize':([37,],[54,]),'more_actions':([40,],[59,]),'options2':([44,120,],[64,122,]),'operator':([50,52,76,78,83,90,98,102,],[71,71,71,71,71,71,71,71,]),'params':([57,93,],[77,101,]),'more_actions_aux':([60,],[80,]),'more_params':([78,],[92,]),'more_options1':([112,],[116,]),'more_options2':([120,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse","S'",1,None,None,None),
  ('parse -> comparative','parse',1,'p_parse','parserPrueba.py',182),
  ('parse -> sentence','parse',1,'p_parse','parserPrueba.py',183),
  ('parse -> var_declare','parse',1,'p_parse','parserPrueba.py',184),
  ('parse -> proc','parse',1,'p_parse','parserPrueba.py',185),
  ('parse -> empty','parse',1,'p_parse','parserPrueba.py',186),
  ('proc -> LLAMAR IDEN LPAR params RPAR','proc',5,'p_proc','parserPrueba.py',193),
  ('params -> expression more_params','params',2,'p_params','parserPrueba.py',199),
  ('more_params -> COMMA params','more_params',2,'p_more_params','parserPrueba.py',205),
  ('more_params -> empty','more_params',1,'p_more_params','parserPrueba.py',206),
  ('sentence -> var_assign','sentence',1,'p_sentence','parserPrueba.py',215),
  ('sentence -> cases','sentence',1,'p_sentence','parserPrueba.py',216),
  ('sentence -> repeat','sentence',1,'p_sentence','parserPrueba.py',217),
  ('sentence -> do','sentence',1,'p_sentence','parserPrueba.py',218),
  ('sentence -> function','sentence',1,'p_sentence','parserPrueba.py',219),
  ('function -> moves','function',1,'p_function','parserPrueba.py',225),
  ('function -> random','function',1,'p_function','parserPrueba.py',226),
  ('function -> changes','function',1,'p_function','parserPrueba.py',227),
  ('changes -> MOVER LPAR IDEN RPAR','changes',4,'p_changes','parserPrueba.py',233),
  ('random -> ALEATORIO LPAR RPAR','random',3,'p_random','parserPrueba.py',239),
  ('moves -> moves_aux LPAR IDEN COMMA INT RPAR','moves',6,'p_moves','parserPrueba.py',245),
  ('moves_aux -> INC','moves_aux',1,'p_moves_aux','parserPrueba.py',251),
  ('moves_aux -> DEC','moves_aux',1,'p_moves_aux','parserPrueba.py',252),
  ('moves_aux -> INI','moves_aux',1,'p_moves_aux','parserPrueba.py',253),
  ('do -> DESDE IDEN EQUALS expression HASTA expression HAGA actions FINDESDE','do',9,'p_do','parserPrueba.py',259),
  ('repeat -> REPITA actions MIENTRAS comparative','repeat',4,'p_repeat','parserPrueba.py',265),
  ('cases -> syntax1','cases',1,'p_cases','parserPrueba.py',271),
  ('cases -> syntax2','cases',1,'p_cases','parserPrueba.py',272),
  ('syntax2 -> ENCASO IDEN options2 SINO LBRACE actions RBRACE FINCASO','syntax2',8,'p_syntax2','parserPrueba.py',278),
  ('options2 -> CUANDO condition expression ENTONS LBRACE actions RBRACE more_options2','options2',8,'p_options2','parserPrueba.py',284),
  ('more_options2 -> options2','more_options2',1,'p_more_options2','parserPrueba.py',290),
  ('more_options2 -> empty','more_options2',1,'p_more_options2','parserPrueba.py',291),
  ('syntax1 -> ENCASO options1 SINO LBRACE actions RBRACE FINCASO','syntax1',7,'p_syntax1','parserPrueba.py',299),
  ('options1 -> CUANDO comparative ENTONS LBRACE actions RBRACE more_options1','options1',7,'p_options1','parserPrueba.py',305),
  ('more_options1 -> options1','more_options1',1,'p_more_options1','parserPrueba.py',311),
  ('more_options1 -> empty','more_options1',1,'p_more_options1','parserPrueba.py',312),
  ('actions -> sentence more_actions','actions',2,'p_actions','parserPrueba.py',320),
  ('more_actions -> SEPARATOR more_actions_aux','more_actions',2,'p_more_actions','parserPrueba.py',326),
  ('more_actions -> empty','more_actions',1,'p_more_actions','parserPrueba.py',327),
  ('more_actions_aux -> actions','more_actions_aux',1,'p_more_actions_aux','parserPrueba.py',339),
  ('more_actions_aux -> empty','more_actions_aux',1,'p_more_actions_aux','parserPrueba.py',340),
  ('var_declare -> DCL IDEN value','var_declare',3,'p_var_declare','parserPrueba.py',346),
  ('value -> initialize','value',1,'p_value','parserPrueba.py',353),
  ('value -> empty','value',1,'p_value','parserPrueba.py',354),
  ('initialize -> ASSIGN expression','initialize',2,'p_initialize','parserPrueba.py',361),
  ('comparative -> IDEN condition expression','comparative',3,'p_comparative','parserPrueba.py',368),
  ('var_assign -> IDEN EQUALS expression','var_assign',3,'p_var_assign','parserPrueba.py',375),
  ('expression -> expression operator expression','expression',3,'p_expression','parserPrueba.py',381),
  ('expression -> IDEN','expression',1,'p_expression_var','parserPrueba.py',388),
  ('expression -> INT','expression',1,'p_expression_int','parserPrueba.py',395),
  ('operator -> MULTIPLY','operator',1,'p_operator','parserPrueba.py',401),
  ('operator -> DIVIDE','operator',1,'p_operator','parserPrueba.py',402),
  ('operator -> PLUS','operator',1,'p_operator','parserPrueba.py',403),
  ('operator -> MINUS','operator',1,'p_operator','parserPrueba.py',404),
  ('condition -> SAME','condition',1,'p_condition','parserPrueba.py',410),
  ('condition -> LESS','condition',1,'p_condition','parserPrueba.py',411),
  ('condition -> MORE','condition',1,'p_condition','parserPrueba.py',412),
  ('condition -> NON_EQUAL','condition',1,'p_condition','parserPrueba.py',413),
  ('condition -> LESS_EQUAL','condition',1,'p_condition','parserPrueba.py',414),
  ('condition -> MORE_EQUAL','condition',1,'p_condition','parserPrueba.py',415),
  ('empty -> <empty>','empty',0,'p_empty','parserPrueba.py',430),
]
